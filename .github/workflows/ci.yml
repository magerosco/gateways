name: Laravel CI

on:
  push:
    branches:
      - patterns
      # - main
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gatewaytesting
        ports:
          - 3320:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:latest
        ports:
          - 6379:6379

      memcached:
        image: memcached:latest
        ports:
          - 11211:11211

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, mysqli, pdo_mysql, redis, mongodb, pdo_pgsql, pgsql, intl, zip, gettext
          coverage: none

      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            netcat-traditional \
            libpng-dev \
            libjpeg-dev \
            libfreetype6-dev \
            locales \
            zip \
            libzip-dev \
            unzip \
            git \
            curl \
            libonig-dev \
            libxml2-dev \
            libpq-dev \
            memcached \
            redis-server

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install npm dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Set environment file
        run: cp .env.example .env

      - name: Set environment file for testing
        run: cp .env.testing .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Generate Passport keys
        run: php artisan passport:keys

      - name: Check Redis connection
        run: redis-cli ping

      - name: Check Memcached connection
        run: echo "stats" | nc localhost 11211

      - name: Wait for Database
        run: |
          chmod +x docker/scripts/wait-for-db.sh
          ./docker/scripts/wait-for-db.sh

      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql_db_testing
          DB_PORT: 3306
          DB_DATABASE: gatewaytesting
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan migrate --force

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql_db_testing
          DB_PORT: 3306
          DB_DATABASE: gatewaytesting
          DB_USERNAME: root
          DB_PASSWORD: root
        run: vendor/bin/phpunit
