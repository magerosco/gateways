{
    "sourceFile": "app/Http/Requests/PeripheralRequest.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 62,
            "patches": [
                {
                    "date": 1722338630227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722338656687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,10 @@\n      */\n     public function rules(): array\n     {\n         return [\n-            //\n+            'name' => 'required',\n+            'email' => 'required|email|unique:users,email',\n+            'password' => 'required',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722338685197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     public function rules(): array\n     {\n         return [\n             'name' => 'required',\n-            'email' => 'required|email|unique:users,email',\n+            'UID' => 'required|email|unique:users,email',\n             'password' => 'required',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722338703384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     public function rules(): array\n     {\n         return [\n             'name' => 'required',\n-            'UID' => 'required|email|unique:users,email',\n+            'UID' => 'nu|email|unique:users,email',\n             'password' => 'required',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722338717503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     public function rules(): array\n     {\n         return [\n             'name' => 'required',\n-            'UID' => 'nu|email|unique:users,email',\n+            'UID' => 'numeric|min:1',\n             'password' => 'required',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722338723587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n      */\n     public function rules(): array\n     {\n         return [\n-            'name' => 'required',\n+            'name' => 'max:255',\n             'UID' => 'numeric|min:1',\n             'password' => 'required',\n         ];\n     }\n"
                },
                {
                    "date": 1722338729606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n      */\n     public function rules(): array\n     {\n         return [\n-            'name' => 'max:255',\n+            'name' => 'max:255|',\n             'UID' => 'numeric|min:1',\n             'password' => 'required',\n         ];\n     }\n"
                },
                {
                    "date": 1722338735070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n      */\n     public function rules(): array\n     {\n         return [\n-            'name' => 'max:255|',\n+            'name' => 'max:255|min:1',\n             'UID' => 'numeric|min:1',\n             'password' => 'required',\n         ];\n     }\n"
                },
                {
                    "date": 1722338741472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n      */\n     public function rules(): array\n     {\n         return [\n-            'name' => 'max:255|min:1',\n+            'name' => 'max:255|min:2',\n             'UID' => 'numeric|min:1',\n             'password' => 'required',\n         ];\n     }\n"
                },
                {
                    "date": 1722338760317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,7 @@\n     {\n         return [\n             'name' => 'max:255|min:2',\n             'UID' => 'numeric|min:1',\n-            'password' => 'required',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722339375937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,8 @@\n      */\n     public function rules(): array\n     {\n         return [\n-            'name' => 'max:255|min:2',\n             'UID' => 'numeric|min:1',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722339408178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,7 +22,8 @@\n     public function rules(): array\n     {\n         return [\n             'UID' => 'numeric|min:1',\n+            'UID' => 'numeric|min:1',\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722339420549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,12 @@\n     public function rules(): array\n     {\n         return [\n             'UID' => 'numeric|min:1',\n-            'UID' => 'numeric|min:1',\n+            'status' => [ function ($attribute, $value, $fail) {\n+                if (!filter_var($value, FILTER_FLAG_IPV4)) {\n+                    $fail('IPv4'.$attribute.' is invalid.');\n+                }\n+            }],\n         ];\n     }\n }\n"
                },
                {
                    "date": 1722339429747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!filter_var($value, FILTER_FLAG_IPV4)) {\n-                    $fail('IPv4'.$attribute.' is invalid.');\n+                    $fail(''.$attribute.' is invalid.');\n                 }\n             }],\n         ];\n     }\n"
                },
                {
                    "date": 1722339434978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!filter_var($value, FILTER_FLAG_IPV4)) {\n-                    $fail(''.$attribute.' is invalid.');\n+                    $fail($attribute.' is invalid.');\n                 }\n             }],\n         ];\n     }\n"
                },
                {
                    "date": 1722339446166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!filter_var($value, FILTER_FLAG_IPV4)) {\n-                    $fail($attribute.' is invalid.');\n+                    $fail($attribute.' is invalid value.');\n                 }\n             }],\n         ];\n     }\n"
                },
                {
                    "date": 1722339456264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     {\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n-                if (!filter_var($value, FILTER_FLAG_IPV4)) {\n+                if (!filter_var(, FILTER_FLAG_IPV4)) {\n                     $fail($attribute.' is invalid value.');\n                 }\n             }],\n         ];\n"
                },
                {
                    "date": 1722339463664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     {\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n-                if (!filter_var(, FILTER_FLAG_IPV4)) {\n+                if (!in_array($value, [0, 1])) {\n                     $fail($attribute.' is invalid value.');\n                 }\n             }],\n         ];\n"
                },
                {
                    "date": 1722339473508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     {\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n-                if (!in_array($value, [0, 1])) {\n+                if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid value.');\n                 }\n             }],\n         ];\n"
                },
                {
                    "date": 1722339536473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n-                    $fail($attribute.' is invalid value.');\n+                    $fail($attribute.' is aninvalid value.');\n                 }\n             }],\n         ];\n     }\n"
                },
                {
                    "date": 1722339544093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n-                    $fail($attribute.' is aninvalid value.');\n+                    $fail($attribute.' is invalid status.');\n                 }\n             }],\n         ];\n     }\n"
                },
                {
                    "date": 1722409920675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,12 @@\n <?php\n \n namespace App\\Http\\Requests;\n \n+use Illuminate\\Contracts\\Validation\\Validator;\n use Illuminate\\Foundation\\Http\\FormRequest;\n+use Illuminate\\Http\\Exceptions\\HttpResponseException;\n+use Symfony\\Component\\HttpFoundation\\Response;\n \n class PeripheralRequest extends FormRequest\n {\n     /**\n@@ -22,12 +25,25 @@\n     public function rules(): array\n     {\n         return [\n             'UID' => 'numeric|min:1',\n+            'vendor' => 'required|string|min:2',\n+            'gateway_id' => '',\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n-                    $fail($attribute.' is invalid status.');\n+                    $fail($attribute.' is invalid.');\n                 }\n             }],\n         ];\n     }\n+\n+    protected function failedValidation(Validator $validator)\n+    {\n+        $errors = $validator->errors();\n+\n+        throw new HttpResponseException(response()->json([\n+            'success' => false,\n+            'message' => 'Validation errors',\n+            'data' => $errors\n+        ], Response::HTTP_BAD_REQUEST));\n+    }\n }\n"
                },
                {
                    "date": 1722409933456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     {\n         return [\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n-            'gateway_id' => '',\n+            'gateway_id' => ['integer', 'exists:gateways,id'],\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n"
                },
                {
                    "date": 1722409947190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     {\n         return [\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n-            'gateway_id' => ['integer', 'exists:gateways,id'],\n+            'gateway_id' => ['integer', 'exists:gateways,id',],\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n"
                },
                {
                    "date": 1722410025421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,13 @@\n     {\n         return [\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n-            'gateway_id' => ['integer', 'exists:gateways,id',],\n+            'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n+                if (!in_array($value, [\"online\",\"offline\"])) {\n+                    $fail($attribute.' is invalid.');\n+                }\n+            }],\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n"
                },
                {
                    "date": 1722410102490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n+                \n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n             }],\n"
                },
                {
                    "date": 1722410120974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,11 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n-                \n+                if ($value == null) {\n+                    \n+                }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n             }],\n"
                },
                {
                    "date": 1722410133163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n         return [\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n-                if ($value == null) {\n-                    \n+                if ($value != null) {\n+\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n"
                },
                {
                    "date": 1722410140756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-\n+                    $gateway = \\App\\Models\\Gateway::find($value);\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n"
                },
                {
                    "date": 1722410148078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,12 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::find($value);\n+                    $gateway = \\App\\Models\\Gateway::($value);\n+                    if ($gateway == null) {\n+                        $fail($attribute.' is invalid.');\n+                    }\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n                 }\n"
                },
                {
                    "date": 1722410155087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::($value);\n+                    $gateway = \\App\\Models\\Gateway::fi($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410160702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::fi($value);\n+                    $gateway = \\App\\Models\\Gateway:$entityManager->getRepository($entity::class)->findBy(['field' => value]);($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410242051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway:$entityManager->getRepository($entity::class)->findBy(['field' => value]);($value);\n+                    $gateway = \\App\\Models\\Gateway::fid($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410248882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::fid($value);\n+                    $gateway = \\App\\Models\\Gateway::find($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410256288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::find($value);\n+                    $gateway = \\App\\Models\\Gateway::$VarName = $repo->findBy(['property'=>value]);($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410268895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+<?php\n+\n+namespace App\\Http\\Requests;\n+\n+use Illuminate\\Contracts\\Validation\\Validator;\n+use Illuminate\\Foundation\\Http\\FormRequest;\n+use Illuminate\\Http\\Exceptions\\HttpResponseException;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+\n+class PeripheralRequest extends FormRequest\n+{\n+    /**\n+     * Determine if the user is authorized to make this request.\n+     */\n+    public function authorize(): bool\n+    {\n+        return true;\n+    }\n+\n+    /**\n+     * Get the validation rules that apply to the request.\n+     *\n+     * @return array<string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array<mixed>|string>\n+     */\n+    public function rules(): array\n+    {\n+        return [\n+            'UID' => 'numeric|min:1',\n+            'vendor' => 'required|string|min:2',\n+            'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n+                if ($value != null) {\n+                    $gateway = \\App\\Models\\Gateway::find($value);\n+                    if ($gateway == null) {\n+                        $fail($attribute.' is invalid.');\n+                    }\n+                }\n+                if (!in_array($value, [\"online\",\"offline\"])) {\n+                    $fail($attribute.' is invalid.');\n+                }\n+            }],\n+            'status' => [ function ($attribute, $value, $fail) {\n+                if (!in_array($value, [\"online\",\"offline\"])) {\n+                    $fail($attribute.' is invalid.');\n+                }\n+            }],\n+        ];\n+    }\n+\n+    protected function failedValidation(Validator $validator)\n+    {\n+        $errors = $validator->errors();\n+\n+        throw new HttpResponseException(response()->json([\n+            'success' => false,\n+            'message' => 'Validation errors',\n+            'data' => $errors\n+        ], Response::HTTP_BAD_REQUEST));\n+    }\n+}\n"
                },
                {
                    "date": 1722410273906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::find($value);\n+                    $gateway = \\App\\Models\\Gateway::findby($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n@@ -56,63 +56,4 @@\n             'data' => $errors\n         ], Response::HTTP_BAD_REQUEST));\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Requests;\n-\n-use Illuminate\\Contracts\\Validation\\Validator;\n-use Illuminate\\Foundation\\Http\\FormRequest;\n-use Illuminate\\Http\\Exceptions\\HttpResponseException;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-\n-class PeripheralRequest extends FormRequest\n-{\n-    /**\n-     * Determine if the user is authorized to make this request.\n-     */\n-    public function authorize(): bool\n-    {\n-        return true;\n-    }\n-\n-    /**\n-     * Get the validation rules that apply to the request.\n-     *\n-     * @return array<string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array<mixed>|string>\n-     */\n-    public function rules(): array\n-    {\n-        return [\n-            'UID' => 'numeric|min:1',\n-            'vendor' => 'required|string|min:2',\n-            'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n-                if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::$VarName = $repo->findBy(['property'=>value]);($value);\n-                    if ($gateway == null) {\n-                        $fail($attribute.' is invalid.');\n-                    }\n-                }\n-                if (!in_array($value, [\"online\",\"offline\"])) {\n-                    $fail($attribute.' is invalid.');\n-                }\n-            }],\n-            'status' => [ function ($attribute, $value, $fail) {\n-                if (!in_array($value, [\"online\",\"offline\"])) {\n-                    $fail($attribute.' is invalid.');\n-                }\n-            }],\n-        ];\n-    }\n-\n-    protected function failedValidation(Validator $validator)\n-    {\n-        $errors = $validator->errors();\n-\n-        throw new HttpResponseException(response()->json([\n-            'success' => false,\n-            'message' => 'Validation errors',\n-            'data' => $errors\n-        ], Response::HTTP_BAD_REQUEST));\n-    }\n-}\n"
                },
                {
                    "date": 1722410282130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::findby($value);\n+                    $gateway = \\App\\Models\\Gateway::findbygateway_id($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410287184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::findbygateway_id($value);\n+                    $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n                     if ($gateway == null) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n"
                },
                {
                    "date": 1722410302019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n-                    if ($gateway == null) {\n+                    if ($gateway) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n"
                },
                {
                    "date": 1722410309012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n-                    if ($gateway) {\n+                    if (cou) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n"
                },
                {
                    "date": 1722410317029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n-                    if (cou) {\n+                    if (count($gateway) ) {\n                         $fail($attribute.' is invalid.');\n                     }\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n"
                },
                {
                    "date": 1722410349681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n-                    if (count($gateway) ) {\n-                        $fail($attribute.' is invalid.');\n+                    if (count($gateway) > 1) {\n+                        $fail($attribute.' ca.');\n                     }\n                 }\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n"
                },
                {
                    "date": 1722410355676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,14 +30,11 @@\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n                     if (count($gateway) > 1) {\n-                        $fail($attribute.' ca.');\n+                        $fail($attribute.' can't.');\n                     }\n                 }\n-                if (!in_array($value, [\"online\",\"offline\"])) {\n-                    $fail($attribute.' is invalid.');\n-                }\n             }],\n             'status' => [ function ($attribute, $value, $fail) {\n                 if (!in_array($value, [\"online\",\"offline\"])) {\n                     $fail($attribute.' is invalid.');\n"
                },
                {
                    "date": 1722410362018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n                     if (count($gateway) > 1) {\n-                        $fail($attribute.' can't.');\n+                        $fail($attribute. can.');\n                     }\n                 }\n             }],\n             'status' => [ function ($attribute, $value, $fail) {\n"
                },
                {
                    "date": 1722410367189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n                     if (count($gateway) > 1) {\n-                        $fail($attribute. can.');\n+                        $fail($attribute.\"\");\n                     }\n                 }\n             }],\n             'status' => [ function ($attribute, $value, $fail) {\n"
                },
                {
                    "date": 1722410376342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n                     $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n                     if (count($gateway) > 1) {\n-                        $fail($attribute.\"\");\n+                        $fail($attribute.\"can't be a.\");\n                     }\n                 }\n             }],\n             'status' => [ function ($attribute, $value, $fail) {\n"
                },
                {
                    "date": 1722410508445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,11 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::findbyGatewayId($value);\n+                    $gateway = \\App\\Models\\Gateway::w($value);\n                     if (count($gateway) > 1) {\n-                        $fail($attribute.\"can't be a.\");\n+                        $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n             }],\n             'status' => [ function ($attribute, $value, $fail) {\n"
                },
                {
                    "date": 1722410513938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::w($value);\n+                    $gateway = \\App\\Models\\Gateway::where($value);\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410522928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where($value);\n+                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->fi($value);\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410540693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->fi($value);\n+                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->$VarName = $repo->find();($value);\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410546056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->$VarName = $repo->find();($value);\n+                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->($value);\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410552002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->($value);\n+                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->findAll($value);\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410559471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('UID', $value)->findAll($value);\n+                    $gateway = \\App\\Models\\Gateway::where('gateways', $value)->findAll();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410569948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('gateways', $value)->findAll();\n+                    $gateway = \\App\\Models\\Gateway::where('gateways',, $value)->findAll();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410579041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('gateways',, $value)->findAll();\n+                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->findAll();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410593989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->findAll();\n+                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->f();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410600162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->f();\n+                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->findA();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410623466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->findA();\n+                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->findg();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410659101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\Gateway::where('gateway_id','in', $value)->findg();\n+                    $gateway = \\App\\Models\\::where('gateway_id','in', $value)->get();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410681492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    $gateway = \\App\\Models\\::where('gateway_id','in', $value)->get();\n+                    Peripheral = \\App\\Models\\Peripheral::where('gateway_id','in', $value)->get();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722410686609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             'UID' => 'numeric|min:1',\n             'vendor' => 'required|string|min:2',\n             'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n                 if ($value != null) {\n-                    Peripherals = \\App\\Models\\Peripheral::where('gateway_id','in', $value)->get();\n+                    $peripherals = \\App\\Models\\Peripheral::where('gateway_id','in', $value)->get();\n                     if (count($gateway) > 1) {\n                         $fail($attribute.\"can't be associated with more than one gateway.\");\n                     }\n                 }\n"
                },
                {
                    "date": 1722411161035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+<?php\n+\n+namespace App\\Http\\Requests;\n+\n+use Illuminate\\Contracts\\Validation\\Validator;\n+use Illuminate\\Foundation\\Http\\FormRequest;\n+use Illuminate\\Http\\Exceptions\\HttpResponseException;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+\n+class PeripheralRequest extends FormRequest\n+{\n+    /**\n+     * Determine if the user is authorized to make this request.\n+     */\n+    public function authorize(): bool\n+    {\n+        return true;\n+    }\n+\n+    /**\n+     * Get the validation rules that apply to the request.\n+     *\n+     * @return array<string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array<mixed>|string>\n+     */\n+    public function rules(): array\n+    {\n+        return [\n+            'UID' => 'numeric|min:1',\n+            'vendor' => 'required|string|min:2',\n+            'gateway_id' => ['integer', 'exists:gateways,id',function ($attribute, $value, $fail) {\n+                if ($value != null) {\n+                    $peripherals = \\App\\Models\\Peripheral::where('gateway_id', $value)->get();\n+                    if (count($peripherals) > 10) {\n+                        $fail($attribute.\" can't be associated with more than 10 gateways.\");\n+                    }\n+                }\n+            }],\n+            'status' => [ function ($attribute, $value, $fail) {\n+                if (!in_array($value, [\"online\",\"offline\"])) {\n+                    $fail($attribute.' is invalid.');\n+                }\n+            }],\n+        ];\n+    }\n+\n+    protected function failedValidation(Validator $validator)\n+    {\n+        $errors = $validator->errors();\n+\n+        throw new HttpResponseException(response()->json([\n+            'success' => false,\n+            'message' => 'Validation errors',\n+            'data' => $errors\n+        ], Response::HTTP_BAD_REQUEST));\n+    }\n+}\n"
                }
            ],
            "date": 1722338630227,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass PeripheralRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array<string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array<mixed>|string>\n     */\n    public function rules(): array\n    {\n        return [\n            //\n        ];\n    }\n}\n"
        }
    ]
}