{
    "sourceFile": "app/Http/Controllers/API/PeripheralController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1722356434563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722356443940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,12 +34,12 @@\n     }\n \n     public function show($id): JsonResponse\n     {\n-        $peripheral = Peripheral::find($peripheral);\n+        $peripheral = Peripheral::find($id);\n         return response()->json([\n             'data'=> new PeripheralResource($peripheral)\n-        ], Response::);\n+        ], Response::HTTP_OK);\n     }\n     public function update(Request $request, Peripheral $peripheral)\n     {\n         //\n"
                },
                {
                    "date": 1722356557848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         return response()->json([\n             'data'=> new PeripheralResource($peripheral)\n         ], Response::HTTP_OK);\n     }\n-    public function update(Request $request, Peripheral $peripheral)\n+    public function update(Request $request, PeripheralRequest $peripheral)\n     {\n         //\n     }\n     public function destroy(Peripheral $peripheral)\n"
                },
                {
                    "date": 1722356567523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,11 @@\n         return response()->json([\n             'data'=> new PeripheralResource($peripheral)\n         ], Response::HTTP_OK);\n     }\n-    public function update(Request $request, PeripheralRequest $peripheral)\n+    public function update(Request $request, PeripheralRequest $peripheral): JsonResponse\n     {\n-        //\n+       \n     }\n     public function destroy(Peripheral $peripheral)\n     {\n         //\n"
                },
                {
                    "date": 1722356574914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,11 @@\n         ], Response::HTTP_OK);\n     }\n     public function update(Request $request, PeripheralRequest $peripheral): JsonResponse\n     {\n-       \n+        $validatedData = $request->validated();\n+        $peripheral->update($validatedData);\n+        return response()->json([\n     }\n     public function destroy(Peripheral $peripheral)\n     {\n         //\n"
                },
                {
                    "date": 1722356610896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,13 @@\n     {\n         $validatedData = $request->validated();\n         $peripheral->update($validatedData);\n         return response()->json([\n+            'data' => new PeripheralResource($peripheral),\n+            'message' => 'Peripheral updated successfully',\n+        ], Response::HTTP_OK);\n     }\n     public function destroy(Peripheral $peripheral)\n     {\n-        //\n+        \n     }\n }\n"
                },
                {
                    "date": 1722356617536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,7 +50,10 @@\n         ], Response::HTTP_OK);\n     }\n     public function destroy(Peripheral $peripheral)\n     {\n-        \n+        $peripheral->delete();\n+        return response()->json([\n+            'message' => 'Peripheral deleted successfully',\n+        ])\n     }\n }\n"
                },
                {
                    "date": 1722356628737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,12 +48,12 @@\n             'data' => new PeripheralResource($peripheral),\n             'message' => 'Peripheral updated successfully',\n         ], Response::HTTP_OK);\n     }\n-    public function destroy(Peripheral $peripheral)\n+    public function destroy(Peripheral $peripheral): JsonResponse\n     {\n         $peripheral->delete();\n         return response()->json([\n             'message' => 'Peripheral deleted successfully',\n-        ])\n+        ], Response::HTTP_OK);\n     }\n }\n"
                },
                {
                    "date": 1722356634489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,9 @@\n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         return PeripheralResource::collection(Peripheral::all());\n     }\n-    public function create()\n-    {\n-        //\n-    }\n+    \n     public function store(PeripheralRequest $request): JsonResponse\n     {\n         $validatedData = $request->validated();\n \n"
                },
                {
                    "date": 1722356641524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,52 +5,63 @@\n use App\\Http\\Controllers\\Controller;\n use App\\Http\\Requests\\PeripheralRequest;\n use App\\Models\\Peripheral;\n use Illuminate\\Http\\Request;\n-use \\Illuminate\\Http\\JsonResponse;\n-use \\Symfony\\Component\\HttpFoundation\\Response;\n+use Illuminate\\Http\\JsonResponse;\n+use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Http\\Resources\\PeripheralResource;\n \n-\n class PeripheralController extends Controller\n {\n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         return PeripheralResource::collection(Peripheral::all());\n     }\n-    \n+\n     public function store(PeripheralRequest $request): JsonResponse\n     {\n         $validatedData = $request->validated();\n \n         $peripheral = Peripheral::create($validatedData);\n \n-        return response()->json([\n-            'data' => new PeripheralResource($peripheral),\n-            'message' => 'Gateway created successfully',\n-        ], Response::HTTP_CREATED);\n+        return response()->json(\n+            [\n+                'data' => new PeripheralResource($peripheral),\n+                'message' => 'Gateway created successfully',\n+            ],\n+            Response::HTTP_CREATED,\n+        );\n     }\n \n     public function show($id): JsonResponse\n     {\n         $peripheral = Peripheral::find($id);\n-        return response()->json([\n-            'data'=> new PeripheralResource($peripheral)\n-        ], Response::HTTP_OK);\n+        return response()->json(\n+            [\n+                'data' => new PeripheralResource($peripheral),\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n     public function update(Request $request, PeripheralRequest $peripheral): JsonResponse\n     {\n         $validatedData = $request->validated();\n         $peripheral->update($validatedData);\n-        return response()->json([\n-            'data' => new PeripheralResource($peripheral),\n-            'message' => 'Peripheral updated successfully',\n-        ], Response::HTTP_OK);\n+        return response()->json(\n+            [\n+                'data' => new PeripheralResource($peripheral),\n+                'message' => 'Peripheral updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n     public function destroy(Peripheral $peripheral): JsonResponse\n     {\n         $peripheral->delete();\n-        return response()->json([\n-            'message' => 'Peripheral deleted successfully',\n-        ], Response::HTTP_OK);\n+        return response()->json(\n+            [\n+                'message' => 'Peripheral deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n }\n"
                },
                {
                    "date": 1722356742291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,12 @@\n \n     public function show($id): JsonResponse\n     {\n         $peripheral = Peripheral::find($id);\n+        if (!$gateway) {\n+            return response()->json([], $note::HTTP_NOT_FOUND);\n+        }\n+        \n         return response()->json(\n             [\n                 'data' => new PeripheralResource($peripheral),\n             ],\n"
                },
                {
                    "date": 1722356750592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,12 +34,12 @@\n \n     public function show($id): JsonResponse\n     {\n         $peripheral = Peripheral::find($id);\n-        if (!$gateway) {\n-            return response()->json([], $note::HTTP_NOT_FOUND);\n+        if (!$peripheral) {\n+            return response()->json([], $peripheral::HTTP_NOT_FOUND);\n         }\n-        \n+\n         return response()->json(\n             [\n                 'data' => new PeripheralResource($peripheral),\n             ],\n"
                },
                {
                    "date": 1722356772755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     public function show($id): JsonResponse\n     {\n         $peripheral = Peripheral::find($id);\n         if (!$peripheral) {\n-            return response()->json([], $peripheral::HTTP_NOT_FOUND);\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n \n         return response()->json(\n             [\n"
                },
                {
                    "date": 1722356906999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,13 @@\n         );\n     }\n     public function destroy(Peripheral $peripheral): JsonResponse\n     {\n+        $peripheral = Peripheral::find($id);\n+        if (!$peripheral) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+\n         $peripheral->delete();\n         return response()->json(\n             [\n                 'message' => 'Peripheral deleted successfully',\n"
                },
                {
                    "date": 1722357383079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n-    public function update(Request $request, PeripheralRequest $peripheral): JsonResponse\n+    public function update(PeripheralRequest $request, PeripheralRequest $peripheral): JsonResponse\n     {\n         $validatedData = $request->validated();\n         $peripheral->update($validatedData);\n         return response()->json(\n@@ -57,9 +57,9 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n-    public function destroy(Peripheral $peripheral): JsonResponse\n+    public function destroy($id): JsonResponse\n     {\n         $peripheral = Peripheral::find($id);\n         if (!$peripheral) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n"
                },
                {
                    "date": 1722357388642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n-    public function update(PeripheralRequest $request, PeripheralRequest $peripheral): JsonResponse\n+    public function update(PeripheralRequest $request, Strin $peripheral): JsonResponse\n     {\n         $validatedData = $request->validated();\n         $peripheral->update($validatedData);\n         return response()->json(\n"
                },
                {
                    "date": 1722357418019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,11 +45,15 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n-    public function update(PeripheralRequest $request, Strin $peripheral): JsonResponse\n+    public function update(PeripheralRequest $request, String $id): JsonResponse\n     {\n         $validatedData = $request->validated();\n+        $peripheral = Peripheral::find($id);\n+        if (!$peripheral) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n         $peripheral->update($validatedData);\n         return response()->json(\n             [\n                 'data' => new PeripheralResource($peripheral),\n"
                },
                {
                    "date": 1722357424342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,8 @@\n         );\n     }\n     public function update(PeripheralRequest $request, String $id): JsonResponse\n     {\n-        $validatedData = $request->validated();\n         $peripheral = Peripheral::find($id);\n         if (!$peripheral) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n"
                },
                {
                    "date": 1722411030385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n \n         return response()->json(\n             [\n                 'data' => new PeripheralResource($peripheral),\n+                'data' => new PeripheralResource($peripheral),\n             ],\n             Response::HTTP_OK,\n         );\n     }\n@@ -51,8 +52,10 @@\n         $peripheral = Peripheral::find($id);\n         if (!$peripheral) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n+\n+        $validatedData = $request->validated();\n         $peripheral->update($validatedData);\n         return response()->json(\n             [\n                 'data' => new PeripheralResource($peripheral),\n"
                },
                {
                    "date": 1722411036681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,10 @@\n         }\n \n         return response()->json(\n             [\n-                'data' => new PeripheralResource($peripheral),\n-                'data' => new PeripheralResource($peripheral),\n+                // 'data' => new PeripheralResource($peripheral),\n+                'data' => Peripheral::where('gateway_id','in', 1)->get(),\n             ],\n             Response::HTTP_OK,\n         );\n     }\n"
                },
                {
                    "date": 1722411069560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \n         return response()->json(\n             [\n                 // 'data' => new PeripheralResource($peripheral),\n-                'data' => Peripheral::where('gateway_id','in', 1)->get(),\n+                'data' => Peripheral::where('gateway_id','=', 1)->get(),\n             ],\n             Response::HTTP_OK,\n         );\n     }\n"
                },
                {
                    "date": 1722411098218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \n         return response()->json(\n             [\n                 // 'data' => new PeripheralResource($peripheral),\n-                'data' => Peripheral::where('gateway_id','=', 1)->get(),\n+                'data' => Peripheral::where('gateway_id', 1)->get(),\n             ],\n             Response::HTTP_OK,\n         );\n     }\n"
                },
                {
                    "date": 1722411118106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         }\n \n         return response()->json(\n             [\n-                // 'data' => new PeripheralResource($peripheral),\n+                'data' => new PeripheralResource($peripheral),\n                 'data' => Peripheral::where('gateway_id', 1)->get(),\n             ],\n             Response::HTTP_OK,\n         );\n"
                }
            ],
            "date": 1722356434563,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\API;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\PeripheralRequest;\nuse App\\Models\\Peripheral;\nuse Illuminate\\Http\\Request;\nuse \\Illuminate\\Http\\JsonResponse;\nuse \\Symfony\\Component\\HttpFoundation\\Response;\nuse App\\Http\\Resources\\PeripheralResource;\n\n\nclass PeripheralController extends Controller\n{\n    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n    {\n        return PeripheralResource::collection(Peripheral::all());\n    }\n    public function create()\n    {\n        //\n    }\n    public function store(PeripheralRequest $request): JsonResponse\n    {\n        $validatedData = $request->validated();\n\n        $peripheral = Peripheral::create($validatedData);\n\n        return response()->json([\n            'data' => new PeripheralResource($peripheral),\n            'message' => 'Gateway created successfully',\n        ], Response::HTTP_CREATED);\n    }\n\n    public function show($id): JsonResponse\n    {\n        $peripheral = Peripheral::find($peripheral);\n        return response()->json([\n            'data'=> new PeripheralResource($peripheral)\n        ], Response::);\n    }\n    public function update(Request $request, Peripheral $peripheral)\n    {\n        //\n    }\n    public function destroy(Peripheral $peripheral)\n    {\n        //\n    }\n}\n"
        }
    ]
}