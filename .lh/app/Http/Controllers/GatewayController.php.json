{
    "sourceFile": "app/Http/Controllers/GatewayController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 179,
            "patches": [
                {
                    "date": 1722340649204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722340661208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-         \n+         re\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1722784046061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,14 @@\n \n class GatewayController extends Controller\n {\n     /**\n+     * NOTE \n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-         re\n+         return view('gateway.index');\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1722784054151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n \n class GatewayController extends Controller\n {\n     /**\n-     * NOTE \n+     * NOTE:\n+     * TODO: \n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n"
                },
                {
                    "date": 1722784078848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,8 @@\n \n class GatewayController extends Controller\n {\n     /**\n-     * NOTE:\n-     * TODO: \n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n"
                },
                {
                    "date": 1724146735532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Gateway;\n+use Illuminate\\Http\\Request;\n+\n+class GatewayController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    {\n+        return GatewayResource::collection(Gateway::all());\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Gateway $gateway)\n+    {\n+        //\n+    }\n+}\n"
                },
                {
                    "date": 1724146748891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,79 +25,24 @@\n \n     /**\n      * Store a newly created resource in storage.\n      */\n-    public function store(Request $request)\n+    public function store(GatewayRequest $request)\n     {\n-        //\n-    }\n+        $validatedData = $request->validated();\n \n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Gateway $gateway)\n-    {\n-        //\n-    }\n+        $gataway = Gateway::create($validatedData);\n \n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Gateway $gateway)\n-    {\n-        //\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gataway),\n+                'message' => 'Gateway created successfully',\n+            ],\n+            Response::HTTP_CREATED,\n+        );\n     }\n \n     /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Gateway $gateway)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Gateway $gateway)\n-    {\n-        //\n-    }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Gateway;\n-use Illuminate\\Http\\Request;\n-\n-class GatewayController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-         return view('gateway.index');\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        //\n-    }\n-\n-    /**\n      * Display the specified resource.\n      */\n     public function show(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724146759669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Resources\\GatewayResource;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\Gateway;\n+use Illuminate\\Http\\JsonResponse;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Http\\Requests\\GatewayRequest;\n+\n+class GatewayController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    {\n+        return GatewayResource::collection(Gateway::all());\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(GatewayRequest $request)\n+    {\n+        $validatedData = $request->validated();\n+\n+        $gataway = Gateway::create($validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gataway),\n+                'message' => 'Gateway created successfully',\n+            ],\n+            Response::HTTP_CREATED,\n+        );\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Gateway $gateway)\n+    {\n+        //\n+    }\n+}\n"
                },
                {
                    "date": 1724146796447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,89 +48,23 @@\n \n     /**\n      * Display the specified resource.\n      */\n-    public function show(Gateway $gateway)\n+    public function show($id): JsonResponse\n     {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Gateway $gateway)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Gateway $gateway)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Gateway $gateway)\n-    {\n-        //\n-    }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Gateway;\n-use Illuminate\\Http\\Request;\n-\n-class GatewayController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n-    {\n-        return GatewayResource::collection(Gateway::all());\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(GatewayRequest $request)\n-    {\n-        $validatedData = $request->validated();\n-\n-        $gataway = Gateway::create($validatedData);\n-\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n         return response()->json(\n             [\n-                'data' => new GatewayResource($gataway),\n-                'message' => 'Gateway created successfully',\n+                'data' => new GatewayResource($gateway),\n             ],\n-            Response::HTTP_CREATED,\n+            Response::HTTP_OK,\n         );\n     }\n \n     /**\n-     * Display the specified resource.\n-     */\n-    public function show(Gateway $gateway)\n-    {\n-        //\n-    }\n-\n-    /**\n      * Show the form for editing the specified resource.\n      */\n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724146808457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,20 +70,38 @@\n     {\n         //\n     }\n \n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Gateway $gateway)\n+\n+    public function update(GatewayRequest $request, String $id)\n     {\n-        //\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $gateway->update($validatedData);\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n \n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Gateway $gateway)\n+    public function destroy($id): JsonResponse\n     {\n-        //\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $gateway->delete();\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n }\n+}\n"
                },
                {
                    "date": 1724146815455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,8 @@\n             Response::HTTP_OK,\n         );\n     }\n \n-    /**\n      * Show the form for editing the specified resource.\n      */\n     public function edit(Gateway $gateway)\n     {\n@@ -102,6 +101,6 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n+\n }\n-}\n"
                },
                {
                    "date": 1724146820697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n             Response::HTTP_CREATED,\n         );\n     }\n \n-    /**\n      * Display the specified resource.\n      */\n     public function show($id): JsonResponse\n     {\n"
                },
                {
                    "date": 1724146829255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,8 @@\n             Response::HTTP_CREATED,\n         );\n     }\n \n-     * Display the specified resource.\n-     */\n     public function show($id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n@@ -61,10 +59,9 @@\n             Response::HTTP_OK,\n         );\n     }\n \n-     * Show the form for editing the specified resource.\n-     */\n+    \n     public function edit(Gateway $gateway)\n     {\n         //\n     }\n"
                },
                {
                    "date": 1724146837103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,9 @@\n     {\n         //\n     }\n \n-    /**\n-     * Store a newly created resource in storage.\n-     */\n+    \n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n@@ -59,9 +57,9 @@\n             Response::HTTP_OK,\n         );\n     }\n \n-    \n+\n     public function edit(Gateway $gateway)\n     {\n         //\n     }\n"
                },
                {
                    "date": 1724146874847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,22 +14,20 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    public function index(Res): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         return GatewayResource::collection(Gateway::all());\n     }\n \n-    /**\n-     * Show the form for creating a new resource.\n-     */\n+\n     public function create()\n     {\n         //\n     }\n \n-    \n+\n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n"
                },
                {
                    "date": 1724146896580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Res): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n-    {\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    {if ($request->get('is_api')) {\n         return GatewayResource::collection(Gateway::all());\n     }\n \n \n"
                },
                {
                    "date": 1724146905931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,11 @@\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {if ($request->get('is_api')) {\n-        return GatewayResource::collection(Gateway::all());\n+            return GatewayResource::collection(Gateway::all());\n+\n+            \n     }\n \n \n     public function create()\n"
                },
                {
                    "date": 1724146917437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n-            \n+        }\n+        ret\n     }\n \n \n     public function create()\n"
                },
                {
                    "date": 1724146924448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n use App\\Models\\Gateway;\n use Illuminate\\Http\\JsonResponse;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Http\\Requests\\GatewayRequest;\n+use Illuminate\\Contracts\\View\\View;\n \n class GatewayController extends Controller\n {\n     /**\n@@ -19,9 +20,9 @@\n     {if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n-        ret\n+        return View\n     }\n \n \n     public function create()\n"
                },
                {
                    "date": 1724146931217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n use App\\Models\\Gateway;\n use Illuminate\\Http\\JsonResponse;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Http\\Requests\\GatewayRequest;\n-use Illuminate\\Contracts\\View\\View;\n \n class GatewayController extends Controller\n {\n     /**\n@@ -20,9 +19,9 @@\n     {if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n-        return View\n+        return \n     }\n \n \n     public function create()\n"
                },
                {
                    "date": 1724146955006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,10 @@\n     /**\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n-    {if ($request->get('is_api')) {\n+    {\n+        if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n         return \n"
                },
                {
                    "date": 1724147029059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,15 +20,15 @@\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n-        return \n+        return View('gateway.index');\n     }\n \n \n     public function create()\n     {\n-        //\n+        \n     }\n \n \n     public function store(GatewayRequest $request)\n"
                },
                {
                    "date": 1724147034492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n \n     public function create()\n     {\n-        \n+        return View('gateway.create');\n     }\n \n \n     public function store(GatewayRequest $request)\n"
                },
                {
                    "date": 1724147236736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,21 +14,21 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    public function index(Request $request): \n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n-        return View('gateway.index');\n+        // return View('gateway.index');\n     }\n \n \n     public function create()\n     {\n-        return View('gateway.create');\n+        // return View('gateway.create');\n     }\n \n \n     public function store(GatewayRequest $request)\n"
                },
                {
                    "date": 1724147246002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n"
                },
                {
                    "date": 1724147251126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|V\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n"
                },
                {
                    "date": 1724147257446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Resources\\GatewayResource;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\Gateway;\n+use Illuminate\\Http\\JsonResponse;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Http\\Requests\\GatewayRequest;\n+use Illuminate\\Contracts\\View\\View;\n+\n+class GatewayController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|View\n+    {\n+        if ($request->get('is_api')) {\n+            return GatewayResource::collection(Gateway::all());\n+\n+        }\n+        // return View('gateway.index');\n+    }\n+\n+\n+    public function create()\n+    {\n+        // return View('gateway.create');\n+    }\n+\n+\n+    public function store(GatewayRequest $request)\n+    {\n+        $validatedData = $request->validated();\n+\n+        $gataway = Gateway::create($validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gataway),\n+                'message' => 'Gateway created successfully',\n+            ],\n+            Response::HTTP_CREATED,\n+        );\n+    }\n+\n+    public function show($id): JsonResponse\n+    {\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+\n+    public function edit(Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+\n+    public function update(GatewayRequest $request, String $id)\n+    {\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $gateway->update($validatedData);\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+    public function destroy($id): JsonResponse\n+    {\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $gateway->delete();\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+}\n"
                },
                {
                    "date": 1724147263195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,15 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|View\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n-        // return View('gateway.index');\n+        return View('gateway.index');\n     }\n \n \n     public function create()\n@@ -100,106 +100,4 @@\n         );\n     }\n \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Http\\Controllers\\Controller;\n-use App\\Http\\Resources\\GatewayResource;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\Gateway;\n-use Illuminate\\Http\\JsonResponse;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Http\\Requests\\GatewayRequest;\n-\n-class GatewayController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|V\n-    {\n-        if ($request->get('is_api')) {\n-            return GatewayResource::collection(Gateway::all());\n-\n-        }\n-        // return View('gateway.index');\n-    }\n-\n-\n-    public function create()\n-    {\n-        // return View('gateway.create');\n-    }\n-\n-\n-    public function store(GatewayRequest $request)\n-    {\n-        $validatedData = $request->validated();\n-\n-        $gataway = Gateway::create($validatedData);\n-\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gataway),\n-                'message' => 'Gateway created successfully',\n-            ],\n-            Response::HTTP_CREATED,\n-        );\n-    }\n-\n-    public function show($id): JsonResponse\n-    {\n-        $gateway = Gateway::find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-\n-    public function edit(Gateway $gateway)\n-    {\n-        //\n-    }\n-\n-\n-    public function update(GatewayRequest $request, String $id)\n-    {\n-        $gateway = Gateway::find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $validatedData = $request->validated();\n-        $gateway->update($validatedData);\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-                'message' => 'Gateway updated successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-    public function destroy($id): JsonResponse\n-    {\n-        $gateway = Gateway::find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $gateway->delete();\n-        return response()->json(\n-            [\n-                'message' => 'Gateway deleted successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-}\n"
                },
                {
                    "date": 1724147269950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection |\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n"
                },
                {
                    "date": 1724147289099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,22 +8,21 @@\n use App\\Models\\Gateway;\n use Illuminate\\Http\\JsonResponse;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Http\\Requests\\GatewayRequest;\n-use Illuminate\\Contracts\\View\\View;\n \n class GatewayController extends Controller\n {\n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection |\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n         }\n-        return View('gateway.index');\n+        // return View('gateway.index');\n     }\n \n \n     public function create()\n"
                },
                {
                    "date": 1724147334110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             Response::HTTP_CREATED,\n         );\n     }\n \n-    public function show($id): JsonResponse\n+    public function show(Request $request,$id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n"
                },
                {
                    "date": 1724147341052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n+        \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n"
                },
                {
                    "date": 1724147356670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,20 +18,17 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n-\n         }\n         // return View('gateway.index');\n     }\n \n-\n     public function create()\n     {\n         // return View('gateway.create');\n     }\n \n-\n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n@@ -45,14 +42,15 @@\n             Response::HTTP_CREATED,\n         );\n     }\n \n-    public function show(Request $request,$id): JsonResponse\n+    public function show(Request $request, $id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n+\n         \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n@@ -60,16 +58,14 @@\n             Response::HTTP_OK,\n         );\n     }\n \n-\n     public function edit(Gateway $gateway)\n     {\n         //\n     }\n \n-\n-    public function update(GatewayRequest $request, String $id)\n+    public function update(GatewayRequest $request, string $id)\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n@@ -98,6 +94,5 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n-\n }\n"
                },
                {
                    "date": 1724147361898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,15 +49,16 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n \n-        \n+        if ($request->get('is_api')) {\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n             Response::HTTP_OK,\n         );\n+        }\n     }\n \n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724147399324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,17 +48,15 @@\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-\n-        if ($request->get('is_api')) {\n+        \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n             Response::HTTP_OK,\n         );\n-        }\n     }\n \n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724147406621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,17 +18,20 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n+\n         }\n         // return View('gateway.index');\n     }\n \n+\n     public function create()\n     {\n         // return View('gateway.create');\n     }\n \n+\n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n@@ -42,29 +45,30 @@\n             Response::HTTP_CREATED,\n         );\n     }\n \n-    public function show(Request $request, $id): JsonResponse\n+    public function show(Request $request$id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n             Response::HTTP_OK,\n         );\n     }\n \n+\n     public function edit(Gateway $gateway)\n     {\n         //\n     }\n \n-    public function update(GatewayRequest $request, string $id)\n+\n+    public function update(GatewayRequest $request, String $id)\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n@@ -93,5 +97,6 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n+\n }\n"
                },
                {
                    "date": 1724147856724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,12 @@\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n \n+        } else {\n+            // Si es una solicitud Web, devolver una vista con los datos en formato JSON\n+            $json_data = GatewayResource::collection($gateways)->toJson();\n+            return view('gateway.index', ['json_data' => $json_data]);\n         }\n         // return View('gateway.index');\n     }\n \n@@ -45,9 +49,9 @@\n             Response::HTTP_CREATED,\n         );\n     }\n \n-    public function show(Request $request$id): JsonResponse\n+    public function show($id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n"
                },
                {
                    "date": 1724147865856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,24 +18,21 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         if ($request->get('is_api')) {\n             return GatewayResource::collection(Gateway::all());\n-\n         } else {\n-            // Si es una solicitud Web, devolver una vista con los datos en formato JSON\n+            \n             $json_data = GatewayResource::collection($gateways)->toJson();\n             return view('gateway.index', ['json_data' => $json_data]);\n         }\n         // return View('gateway.index');\n     }\n \n-\n     public function create()\n     {\n         // return View('gateway.create');\n     }\n \n-\n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n@@ -63,16 +60,14 @@\n             Response::HTTP_OK,\n         );\n     }\n \n-\n     public function edit(Gateway $gateway)\n     {\n         //\n     }\n \n-\n-    public function update(GatewayRequest $request, String $id)\n+    public function update(GatewayRequest $request, string $id)\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n@@ -101,6 +96,5 @@\n             ],\n             Response::HTTP_OK,\n         );\n     }\n-\n }\n"
                },
                {
                    "date": 1724147881144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         if ($request->get('is_api')) {\n-            return GatewayResource::collection(Gateway::all());\n+            return GatewayResource::collection();\n         } else {\n-            \n+\n             $json_data = GatewayResource::collection($gateways)->toJson();\n             return view('gateway.index', ['json_data' => $json_data]);\n         }\n         // return View('gateway.index');\n"
                },
                {
                    "date": 1724147886772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n+        Gateway::all();\n         if ($request->get('is_api')) {\n             return GatewayResource::collection();\n         } else {\n \n"
                },
                {
                    "date": 1724147893966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n-        Gateway::all();\n+        $gateways = Gateway::all();\n         if ($request->get('is_api')) {\n-            return GatewayResource::collection();\n+            return GatewayResource::collection($gateways);\n         } else {\n \n             $json_data = GatewayResource::collection($gateways)->toJson();\n             return view('gateway.index', ['json_data' => $json_data]);\n"
                },
                {
                    "date": 1724147899614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,17 @@\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n         $gateways = Gateway::all();\n+\n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n         } else {\n \n             $json_data = GatewayResource::collection($gateways)->toJson();\n             return view('gateway.index', ['json_data' => $json_data]);\n         }\n-        // return View('gateway.index');\n+        \n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724147911520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,14 +20,15 @@\n         $gateways = Gateway::all();\n \n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n-        } else {\n+        }\n+        // else {\n \n-            $json_data = GatewayResource::collection($gateways)->toJson();\n-            return view('gateway.index', ['json_data' => $json_data]);\n-        }\n-        \n+        //     $json_data = GatewayResource::collection($gateways)->toJson();\n+        //     return view('gateway.index', ['json_data' => $json_data]);\n+        // }\n+\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724147962892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,10 @@\n                 'message' => 'Gateway created successfully',\n             ],\n             Response::HTTP_CREATED,\n         );\n+\n+        return redirect()->route('note.index')->with('success', __('crud.success.create', ['name' => 'Note']));\n     }\n \n     public function show($id): JsonResponse\n     {\n"
                },
                {
                    "date": 1724148009354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     {\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n-\n+        new GatewayResource($gataway) \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gataway),\n                 'message' => 'Gateway created successfully',\n"
                },
                {
                    "date": 1724148016429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     {\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n-        new GatewayResource($gataway) \n+         new GatewayResource($gataway) ;\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gataway),\n                 'message' => 'Gateway created successfully',\n"
                },
                {
                    "date": 1724148024124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     {\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n-         new GatewayResource($gataway) ;\n+        $ =new GatewayResource($gataway) ;\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gataway),\n                 'message' => 'Gateway created successfully',\n"
                },
                {
                    "date": 1724148029457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     {\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n-        $ =new GatewayResource($gataway) ;\n+        $data =new GatewayResource($gataway) ;\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gataway),\n                 'message' => 'Gateway created successfully',\n"
                },
                {
                    "date": 1724148050323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         $gataway = Gateway::create($validatedData);\n         $data =new GatewayResource($gataway) ;\n         return response()->json(\n             [\n-                'data' => new GatewayResource($gataway),\n+                'data' => $data,\n                 'message' => 'Gateway created successfully',\n             ],\n             Response::HTTP_CREATED,\n         );\n@@ -57,8 +57,9 @@\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n+        \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n"
                },
                {
                    "date": 1724148068775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n         $data =new GatewayResource($gataway) ;\n+        \n         return response()->json(\n             [\n                 'data' => $data,\n                 'message' => 'Gateway created successfully',\n@@ -57,9 +58,8 @@\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n"
                },
                {
                    "date": 1724148073942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,10 @@\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n         $data =new GatewayResource($gataway) ;\n-        \n+\n+        if()\n         return response()->json(\n             [\n                 'data' => $data,\n                 'message' => 'Gateway created successfully',\n"
                },
                {
                    "date": 1724148079123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,16 +41,17 @@\n \n         $gataway = Gateway::create($validatedData);\n         $data =new GatewayResource($gataway) ;\n \n-        if()\n+        if($request->get('is_api')) {\n         return response()->json(\n             [\n                 'data' => $data,\n                 'message' => 'Gateway created successfully',\n             ],\n             Response::HTTP_CREATED,\n         );\n+    }\n \n         return redirect()->route('note.index')->with('success', __('crud.success.create', ['name' => 'Note']));\n     }\n \n"
                },
                {
                    "date": 1724148088216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,17 @@\n         $gataway = Gateway::create($validatedData);\n         $data =new GatewayResource($gataway) ;\n \n         if($request->get('is_api')) {\n-        return response()->json(\n-            [\n-                'data' => $data,\n-                'message' => 'Gateway created successfully',\n-            ],\n-            Response::HTTP_CREATED,\n-        );\n-    }\n+            return response()->json(\n+                [\n+                    'data' => $data,\n+                    'message' => 'Gateway created successfully',\n+                ],\n+                Response::HTTP_CREATED,\n+            );\n+        }\n+        else {\n \n         return redirect()->route('note.index')->with('success', __('crud.success.create', ['name' => 'Note']));\n     }\n \n"
                },
                {
                    "date": 1724148164008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,10 @@\n             );\n         }\n         else {\n \n-        return redirect()->route('note.index')->with('success', __('crud.success.create', ['name' => 'Note']));\n+        return redirect()->\n+        }\n     }\n \n     public function show($id): JsonResponse\n     {\n"
                },
                {
                    "date": 1724148169063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             );\n         }\n         else {\n \n-        return redirect()->\n+            return redirect()->route('gateway.index')->with('success', 'Gateway created successfully');\n         }\n     }\n \n     public function show($id): JsonResponse\n"
                },
                {
                    "date": 1724148179543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,10 @@\n             );\n         }\n         else {\n \n-            return redirect()->route('gateway.index')->with('success', 'Gateway created successfully');\n+            return redirect()->route('gateway.index')->with(\n+                'success', 'Gateway created successfully');\n         }\n     }\n \n     public function show($id): JsonResponse\n"
                },
                {
                    "date": 1724148186357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,10 @@\n         }\n         else {\n \n             return redirect()->route('gateway.index')->with(\n-                'success', 'Gateway created successfully');\n+                'success', 'Gateway created successfully'\n+            );\n         }\n     }\n \n     public function show($id): JsonResponse\n"
                },
                {
                    "date": 1724148194372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,10 @@\n         }\n         else {\n \n             return redirect()->route('gateway.index')->with(\n-                'success', 'Gateway created successfully'\n+                'success', 'Gateway created successfully',\n+                $data-\n             );\n         }\n     }\n \n"
                },
                {
                    "date": 1724148199868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n         else {\n \n             return redirect()->route('gateway.index')->with(\n                 'success', 'Gateway created successfully',\n-                $data-\n+                $data->toJson()\n             );\n         }\n     }\n \n"
                },
                {
                    "date": 1724148228333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Resources\\GatewayResource;\n+use Illuminate\\Http\\Request;\n+use App\\Models\\Gateway;\n+use Illuminate\\Http\\JsonResponse;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Http\\Requests\\GatewayRequest;\n+\n+class GatewayController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    {\n+        $gateways = Gateway::all();\n+\n+        if ($request->get('is_api')) {\n+            return GatewayResource::collection($gateways);\n+        }\n+        // else {\n+\n+        //     $json_data = GatewayResource::collection($gateways)->toJson();\n+        //     return view('gateway.index', ['json_data' => $json_data]);\n+        // }\n+\n+    }\n+\n+    public function create()\n+    {\n+        // return View('gateway.create');\n+    }\n+\n+    public function store(GatewayRequest $request)\n+    {\n+        $validatedData = $request->validated();\n+\n+        $gataway = Gateway::create($validatedData);\n+        $data =new GatewayResource($gataway) ;\n+\n+        if($request->get('is_api')) {\n+            return response()->json(\n+                [\n+                    'data' => $data,\n+                    'message' => 'Gateway created successfully',\n+                ],\n+                Response::HTTP_CREATED,\n+            );\n+        }\n+        else {\n+\n+            return redirect()->route('gateway.index')->with(\n+                'success', 'Gateway created successfully',\n+                $data->toJson(),\n+                \n+            );\n+        }\n+    }\n+\n+    public function show($id): JsonResponse\n+    {\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+    public function edit(Gateway $gateway)\n+    {\n+        //\n+    }\n+\n+    public function update(GatewayRequest $request, string $id)\n+    {\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $gateway->update($validatedData);\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+    public function destroy($id): JsonResponse\n+    {\n+        $gateway = Gateway::find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $gateway->delete();\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+}\n"
                },
                {
                    "date": 1724148245100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n \n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['json_data' => $json_data]);\n         // }\n-\n     }\n \n     public function create()\n     {\n@@ -39,140 +38,23 @@\n     {\n         $validatedData = $request->validated();\n \n         $gataway = Gateway::create($validatedData);\n-        $data =new GatewayResource($gataway) ;\n+        $data = new GatewayResource($gataway);\n \n-        if($request->get('is_api')) {\n-            return response()->json(\n-                [\n-                    'data' => $data,\n-                    'message' => 'Gateway created successfully',\n-                ],\n-                Response::HTTP_CREATED,\n-            );\n-        }\n-        else {\n-\n-            return redirect()->route('gateway.index')->with(\n-                'success', 'Gateway created successfully',\n-                $data->toJson(),\n-                \n-            );\n-        }\n-    }\n-\n-    public function show($id): JsonResponse\n-    {\n-        $gateway = Gateway::find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-    public function edit(Gateway $gateway)\n-    {\n-        //\n-    }\n-\n-    public function update(GatewayRequest $request, string $id)\n-    {\n-        $gateway = Gateway::find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $validatedData = $request->validated();\n-        $gateway->update($validatedData);\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-                'message' => 'Gateway updated successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-    public function destroy($id): JsonResponse\n-    {\n-        $gateway = Gateway::find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $gateway->delete();\n-        return response()->json(\n-            [\n-                'message' => 'Gateway deleted successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Http\\Controllers\\Controller;\n-use App\\Http\\Resources\\GatewayResource;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\Gateway;\n-use Illuminate\\Http\\JsonResponse;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Http\\Requests\\GatewayRequest;\n-\n-class GatewayController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n-    {\n-        $gateways = Gateway::all();\n-\n         if ($request->get('is_api')) {\n-            return GatewayResource::collection($gateways);\n-        }\n-        // else {\n-\n-        //     $json_data = GatewayResource::collection($gateways)->toJson();\n-        //     return view('gateway.index', ['json_data' => $json_data]);\n-        // }\n-\n-    }\n-\n-    public function create()\n-    {\n-        // return View('gateway.create');\n-    }\n-\n-    public function store(GatewayRequest $request)\n-    {\n-        $validatedData = $request->validated();\n-\n-        $gataway = Gateway::create($validatedData);\n-        $data =new GatewayResource($gataway) ;\n-\n-        if($request->get('is_api')) {\n             return response()->json(\n                 [\n                     'data' => $data,\n                     'message' => 'Gateway created successfully',\n                 ],\n                 Response::HTTP_CREATED,\n             );\n+        } else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n         }\n-        else {\n-\n-            return redirect()->route('gateway.index')->with(\n-                'success', 'Gateway created successfully',\n-                $data->toJson()\n-            );\n-        }\n     }\n \n     public function show($id): JsonResponse\n     {\n"
                },
                {
                    "date": 1724148255293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,9 @@\n         $gataway = Gateway::create($validatedData);\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n-            return response()->json(\n-                [\n+            return response()->json(                [\n                     'data' => $data,\n                     'message' => 'Gateway created successfully',\n                 ],\n                 Response::HTTP_CREATED,\n"
                },
                {
                    "date": 1724148260790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,9 @@\n         $gataway = Gateway::create($validatedData);\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n-            return response()->json(                [\n-                    'data' => $data,\n-                    'message' => 'Gateway created successfully',\n+            return response()->json(['data' => $data,                    'message' => 'Gateway created successfully',\n                 ],\n                 Response::HTTP_CREATED,\n             );\n         } else {\n"
                },
                {
                    "date": 1724148266038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,9 @@\n         $gataway = Gateway::create($validatedData);\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n-            return response()->json(['data' => $data,                    'message' => 'Gateway created successfully',\n-                ],\n+            return response()->json(['data' => $data,'message' => 'Gateway created successfully',                ],\n                 Response::HTTP_CREATED,\n             );\n         } else {\n             return redirect()\n"
                },
                {
                    "date": 1724148278858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,12 +41,11 @@\n         $gataway = Gateway::create($validatedData);\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n-            return response()->json(['data' => $data,'message' => 'Gateway created successfully',                ],\n-                Response::HTTP_CREATED,\n-            );\n-        } else {\n+            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        }\n+        else {\n             return redirect()\n                 ->route('gateway.index')\n                 ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n         }\n"
                },
                {
                    "date": 1724148292942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,21 +43,22 @@\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n-        else {\n-            return redirect()\n-                ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n-        }\n+        // else {\n+        //     return redirect()\n+        //         ->route('gateway.index')\n+        //         ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n+        // }\n     }\n \n     public function show($id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n+        if\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n"
                },
                {
                    "date": 1724148299185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        if\n+        if($request->get('is_api')) {   \n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n"
                },
                {
                    "date": 1724148305667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,15 +56,17 @@\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        if($request->get('is_api')) {   \n+        if($request->get('is_api')) {\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n             ],\n             Response::HTTP_OK,\n         );\n+        }\n+        // else {\n     }\n \n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724148317687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     }\n \n     public function show($id): JsonResponse\n     {\n-        $gateway = Gateway::find($id);\n+        $gateway = Gateway::find(Re$id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n@@ -65,8 +65,10 @@\n             Response::HTTP_OK,\n         );\n         }\n         // else {\n+        //     return view('gateway.show', ['gateway' => $gateway]);\n+        // }\n     }\n \n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724148323670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     }\n \n     public function show($id): JsonResponse\n     {\n-        $gateway = Gateway::find(Re$id);\n+        $gateway = Gateway::find(Request $$id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n"
                },
                {
                    "date": 1724148329599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     }\n \n     public function show($id): JsonResponse\n     {\n-        $gateway = Gateway::find(Request $$id);\n+        $gateway = Gateway::find(Request $request ,$id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n"
                },
                {
                    "date": 1724148335510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     }\n \n     public function show($id): JsonResponse\n     {\n-        $gateway = Gateway::find(Request $request ,$id);\n+        $gateway = Gateway::find(,$id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n"
                },
                {
                    "date": 1724148341222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,11 @@\n         //         ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n         // }\n     }\n \n-    public function show($id): JsonResponse\n+    public function showRequest $request ($id): JsonResponse\n     {\n-        $gateway = Gateway::find(,$id);\n+        $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n"
                },
                {
                    "date": 1724148358484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         //         ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n         // }\n     }\n \n-    public function showRequest $request ($id): JsonResponse\n+    public function show(Request $request ,$id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n@@ -65,9 +65,9 @@\n             Response::HTTP_OK,\n         );\n         }\n         // else {\n-        //     return view('gateway.show', ['gateway' => $gateway]);\n+        //     return view('gateway.show', ['gateway' => $gateway->]);\n         // }\n     }\n \n     public function edit(Gateway $gateway)\n"
                },
                {
                    "date": 1724148370187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n             Response::HTTP_OK,\n         );\n         }\n         // else {\n-        //     return view('gateway.show', ['gateway' => $gateway->]);\n+        //     return view('gateway.show', ['gateway' => $gateway->toJson]);\n         // }\n     }\n \n     public function edit(Gateway $gateway)\n"
                },
                {
                    "date": 1724148397840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         }\n         // else {\n \n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n-        //     return view('gateway.index', ['json_data' => $json_data]);\n+        //     return view('gateway.index', ['data' => $json_data]);\n         // }\n     }\n \n     public function create()\n@@ -64,11 +64,11 @@\n             ],\n             Response::HTTP_OK,\n         );\n         }\n-        // else {\n-        //     return view('gateway.show', ['gateway' => $gateway->toJson]);\n-        // }\n+        else {\n+            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        }\n     }\n \n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724148422621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,13 +43,13 @@\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n-        // else {\n-        //     return redirect()\n-        //         ->route('gateway.index')\n-        //         ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n-        // }\n+        else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n+        }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n     {\n"
                },
                {
                    "date": 1724148429507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n+                ->with('success', 'Gateway created successfully',[] 'data' => $data->toJson(), Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148441701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully',[] 'data' => $data->toJson(), Response::HTTP_CREATED);\n+                ->with('success', 'Gateway created successfully', []'data' => $data->toJson(), Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148447005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully', []'data' => $data->toJson(), Response::HTTP_CREATED);\n+                ->with('success', 'Gateway created successfully', ['data' => $data->toJson()], Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148469230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully', ['data' => $data->toJson()], Response::HTTP_CREATED);\n+                ->with('success', 'Gateway created successfully', 'data' => $data->toJson(), Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148487469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully', 'data' => $data->toJson(), Response::HTTP_CREATED);\n+                ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148570704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with('success', 'Gateway created successfully', $data->toJson(), Response::HTTP_CREATED);\n+                ->with(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148584653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+                ->with(['data' => $data-, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n"
                },
                {
                    "date": 1724148602011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\n         else {\n             return redirect()\n                 ->route('gateway.index')\n-                ->with(['data' => $data-, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n     }\n \n     public function show(Request $request ,$id): JsonResponse\n@@ -57,10 +57,9 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n-        return response()->json(\n-            [\n+        return response()->json(            [\n                 'data' => new GatewayResource($gateway),\n             ],\n             Response::HTTP_OK,\n         );\n"
                },
                {
                    "date": 1724148607466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,11 +57,9 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n-        return response()->json(            [\n-                'data' => new GatewayResource($gateway),\n-            ],\n+        return response()->json(['data' => new GatewayResource($gateway),            ],\n             Response::HTTP_OK,\n         );\n         }\n         else {\n"
                },
                {
                    "date": 1724148613456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,11 +57,9 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if($request->get('is_api')) {\n-        return response()->json(['data' => new GatewayResource($gateway),            ],\n-            Response::HTTP_OK,\n-        );\n+        return response()->json(['data' => new GatewayResource($gateway),],Response::HTTP_OK,);\n         }\n         else {\n             return view('gateway.show', ['gateway' => $gateway->toJson()]);\n         }\n"
                },
                {
                    "date": 1724148619707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,26 +42,25 @@\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        }\n-        else {\n+        } else {\n             return redirect()\n                 ->route('gateway.index')\n                 ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n     }\n \n-    public function show(Request $request ,$id): JsonResponse\n+    public function show(Request $request, $id): JsonResponse\n     {\n         $gateway = Gateway::find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        if($request->get('is_api')) {\n-        return response()->json(['data' => new GatewayResource($gateway),],Response::HTTP_OK,);\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n         }\n-        else {\n+         else {\n             return view('gateway.show', ['gateway' => $gateway->toJson()]);\n         }\n     }\n \n"
                },
                {
                    "date": 1724149297516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,10 @@\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        } else {\n+        }\n+        else {\n             return redirect()\n                 ->route('gateway.index')\n                 ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n@@ -58,11 +59,11 @@\n         }\n         if ($request->get('is_api')) {\n             return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n         }\n-         else {\n-            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n-        }\n+        //  else {\n+        //     return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        // }\n     }\n \n     public function edit(Gateway $gateway)\n     {\n"
                },
                {
                    "date": 1724149304748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,9 @@\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        }\n-        else {\n+        } else {\n             return redirect()\n                 ->route('gateway.index')\n                 ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         }\n"
                },
                {
                    "date": 1724149532618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         //     return view('gateway.show', ['gateway' => $gateway->toJson()]);\n         // }\n     }\n \n-    public function edit(Gateway $gateway)\n+    public function edit(GatewayRequest $request, string $id)\n     {\n         //\n     }\n \n"
                },
                {
                    "date": 1724149539174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         //     return view('gateway.show', ['gateway' => $gateway->toJson()]);\n         // }\n     }\n \n-    public function edit(GatewayRequest $request, string $id)\n+    public function edit(Request $request, string $id)\n     {\n         //\n     }\n \n"
                },
                {
                    "date": 1724149546082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n     }\n \n     public function edit(Request $request, string $id)\n     {\n-        //\n+        i\n     }\n \n     public function update(GatewayRequest $request, string $id)\n     {\n"
                },
                {
                    "date": 1724149558525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,10 @@\n     }\n \n     public function edit(Request $request, string $id)\n     {\n-        i\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource(Gateway::find($id))], Response::HTTP_OK);\n     }\n \n     public function update(GatewayRequest $request, string $id)\n     {\n"
                },
                {
                    "date": 1724149587980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,10 @@\n \n     public function edit(Request $request, string $id)\n     {\n         if ($request->get('is_api')) {\n-            return response()->json(['data' => new GatewayResource(Gateway::find($id))], Response::HTTP_OK);\n+            return response()->json(['data' => new GatewayResource(Gateway::find($id))], Response::HTTP);\n+        }\n     }\n \n     public function update(GatewayRequest $request, string $id)\n     {\n"
                },
                {
                    "date": 1724149602400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n \n     public function edit(Request $request, string $id)\n     {\n         if ($request->get('is_api')) {\n-            return response()->json(['data' => new GatewayResource(Gateway::find($id))], Response::HTTP);\n+            return response()->json(['data' => ], Response::HTTP_BAD_REQUEST);\n         }\n     }\n \n     public function update(GatewayRequest $request, string $id)\n"
                },
                {
                    "date": 1724149613637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n \n     public function edit(Request $request, string $id)\n     {\n         if ($request->get('is_api')) {\n-            return response()->json(['data' => ], Response::HTTP_BAD_REQUEST);\n+            return response()->json(['data' => ]], Response::HTTP_BAD_REQUEST);\n         }\n     }\n \n     public function update(GatewayRequest $request, string $id)\n"
                },
                {
                    "date": 1724149618735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n \n     public function edit(Request $request, string $id)\n     {\n         if ($request->get('is_api')) {\n-            return response()->json(['data' => ]], Response::HTTP_BAD_REQUEST);\n+            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n         }\n     }\n \n     public function update(GatewayRequest $request, string $id)\n"
                },
                {
                    "date": 1724164732021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,16 @@\n use App\\Http\\Requests\\GatewayRequest;\n \n class GatewayController extends Controller\n {\n+\n+    protected $postRepository;\n+\n+    public function __construct(PostRepositoryInterface $postRepository)\n+    {\n+        $this->postRepository = $postRepository;\n+    }\n+    \n     /**\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n"
                },
                {
                    "date": 1724164742286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,13 +14,13 @@\n {\n \n     protected $postRepository;\n \n-    public function __construct(PostRepositoryInterface $postRepository)\n+    public function __construct(protected PostRepositoryInterface $postRepository)\n     {\n         $this->postRepository = $postRepository;\n     }\n-    \n+\n     /**\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n"
                },
                {
                    "date": 1724164762413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,13 +12,13 @@\n \n class GatewayController extends Controller\n {\n \n-    protected $postRepository;\n \n-    public function __construct(protected PostRepositoryInterface $postRepository)\n+\n+    public function __construct(protected GatewayRepositoryInterface $GatewayRepository)\n     {\n-        $this->postRepository = $postRepository;\n+        $this->GatewayRepository = $GatewayRepository;\n     }\n \n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1724164776310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,20 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use App\\Models\\Gateway;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Http\\JsonResponse;\n use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Requests\\GatewayRequest;\n use App\\Http\\Resources\\GatewayResource;\n-use Illuminate\\Http\\Request;\n-use App\\Models\\Gateway;\n-use Illuminate\\Http\\JsonResponse;\n use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Http\\Requests\\GatewayRequest;\n+use App\\Repositories\\GatewayRepositoryInterface;\n \n class GatewayController extends Controller\n {\n \n-\n-\n     public function __construct(protected GatewayRepositoryInterface $GatewayRepository)\n     {\n         $this->GatewayRepository = $GatewayRepository;\n     }\n"
                },
                {
                    "date": 1724164804288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n use App\\Repositories\\GatewayRepositoryInterface;\n \n class GatewayController extends Controller\n {\n-\n     public function __construct(protected GatewayRepositoryInterface $GatewayRepository)\n     {\n         $this->GatewayRepository = $GatewayRepository;\n     }\n@@ -23,9 +22,9 @@\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n-        $gateways = Gateway::all();\n+        $gateways = $this->postRepositoryall();\n \n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n         }\n"
                },
                {
                    "date": 1724164814827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,17 +14,17 @@\n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $GatewayRepository)\n     {\n-        $this->GatewayRepository = $GatewayRepository;\n+        $this->gatewayRepository = $GatewayRepository;\n     }\n \n     /**\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n-        $gateways = $this->postRepositoryall();\n+        $gateways = $this->postRepository->all();\n \n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n         }\n"
                },
                {
                    "date": 1724164820987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n use App\\Repositories\\GatewayRepositoryInterface;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $GatewayRepository)\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository)\n     {\n         $this->gatewayRepository = $GatewayRepository;\n     }\n \n"
                },
                {
                    "date": 1724164827272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,17 +14,17 @@\n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository)\n     {\n-        $this->gatewayRepository = $GatewayRepository;\n+        $this->gatewayRepository = $gatewayRepository;\n     }\n \n     /**\n      * Display a listing of the resource.\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n     {\n-        $gateways = $this->postRepository->all();\n+        $gateways = $this->gatewayRepository->all();\n \n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n         }\n"
                },
                {
                    "date": 1724164859665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n-        $gataway = Gateway::create($validatedData);\n+        $gataway = $this->gatewayRepository->($validatedData);\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n"
                },
                {
                    "date": 1724164867491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     public function store(GatewayRequest $request)\n     {\n         $validatedData = $request->validated();\n \n-        $gataway = $this->gatewayRepository->($validatedData);\n+        $gataway = $this->gatewayRepository->create($validatedData);\n         $data = new GatewayResource($gataway);\n \n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n@@ -57,9 +57,9 @@\n     }\n \n     public function show(Request $request, $id): JsonResponse\n     {\n-        $gateway = Gateway::find($id);\n+        $gateway = $this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if ($request->get('is_api')) {\n"
                },
                {
                    "date": 1724164883779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n     }\n \n     public function update(GatewayRequest $request, string $id)\n     {\n-        $gateway = Gateway::find($id);\n+        $gateway =$this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $validatedData = $request->validated();\n"
                },
                {
                    "date": 1724164898520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $validatedData = $request->validated();\n-        $gateway->update($validatedData);\n+        $this->gatewayRepository->->update($validatedData);\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n                 'message' => 'Gateway updated successfully',\n"
                },
                {
                    "date": 1724164908601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $validatedData = $request->validated();\n-        $this->gatewayRepository->->update($validatedData);\n+        $this->gatewayRepository->->update($id$validatedData);\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n                 'message' => 'Gateway updated successfully',\n"
                },
                {
                    "date": 1724164923681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $validatedData = $request->validated();\n-        $this->gatewayRepository->->update($id$validatedData);\n+        $this->gatewayRepository->update($id, $validatedData);\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n                 'message' => 'Gateway updated successfully',\n"
                },
                {
                    "date": 1724164964815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $validatedData = $request->validated();\n         $this->gatewayRepository->update($id, $validatedData);\n+\n         return response()->json(\n             [\n                 'data' => new GatewayResource($gateway),\n                 'message' => 'Gateway updated successfully',\n@@ -95,9 +96,9 @@\n     }\n \n     public function destroy($id): JsonResponse\n     {\n-        $gateway = Gateway::find($id);\n+         $gateway =$this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $gateway->delete();\n"
                },
                {
                    "date": 1724164972676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,13 +96,13 @@\n     }\n \n     public function destroy($id): JsonResponse\n     {\n-         $gateway =$this->gatewayRepository->find($id);\n+         $gateway = $this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        $gateway->delete();\n+        $this->gatewayRepository->->delete();\n         return response()->json(\n             [\n                 'message' => 'Gateway deleted successfully',\n             ],\n"
                },
                {
                    "date": 1724164985744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n          $gateway = $this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n-        $this->gatewayRepository->->delete();\n+        $this->gatewayRepository->delete($id);\n         return response()->json(\n             [\n                 'message' => 'Gateway deleted successfully',\n             ],\n"
                },
                {
                    "date": 1724164996083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n     }\n \n     public function update(GatewayRequest $request, string $id)\n     {\n-        $gateway =$this->gatewayRepository->find($id);\n+        $gateway = $this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $validatedData = $request->validated();\n@@ -96,9 +96,9 @@\n     }\n \n     public function destroy($id): JsonResponse\n     {\n-         $gateway = $this->gatewayRepository->find($id);\n+        $gateway = $this->gatewayRepository->find($id);\n         if (!$gateway) {\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         $this->gatewayRepository->delete($id);\n"
                },
                {
                    "date": 1724165616204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n-use App\\Models\\Gateway;\n use Illuminate\\Http\\Request;\n use Illuminate\\Http\\JsonResponse;\n use App\\Http\\Controllers\\Controller;\n use App\\Http\\Requests\\GatewayRequest;\n"
                },
                {
                    "date": 1724222968798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+\n use Illuminate\\Http\\Request;\n use Illuminate\\Http\\JsonResponse;\n use App\\Http\\Controllers\\Controller;\n use App\\Http\\Requests\\GatewayRequest;\n"
                },
                {
                    "date": 1724223269225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection \n     {\n         $gateways = $this->gatewayRepository->all();\n \n         if ($request->get('is_api')) {\n"
                },
                {
                    "date": 1724223275042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection \n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         if ($request->get('is_api')) {\n"
                },
                {
                    "date": 1724223284728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n+    public function index(Request $request)\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         if ($request->get('is_api')) {\n"
                },
                {
                    "date": 1724223290029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request)\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         if ($request->get('is_api')) {\n"
                },
                {
                    "date": 1724223299012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n      */\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-\n+$a = $request->get('is_api')\n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n         }\n         // else {\n"
                },
                {
                    "date": 1724241486487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Http\\JsonResponse;\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Requests\\GatewayRequest;\n+use App\\Http\\Resources\\GatewayResource;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Repositories\\GatewayRepositoryInterface;\n+\n+class GatewayController extends Controller\n+{\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository)\n+    {\n+        $this->gatewayRepository = $gatewayRepository;\n+    }\n+\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n+    {\n+        $gateways = $this->gatewayRepository->all();\n+\n+        if ($request->get('is_api')) {\n+            return GatewayResource::collection($gateways);\n+        }\n+        // else {\n+\n+        //     $json_data = GatewayResource::collection($gateways)->toJson();\n+        //     return view('gateway.index', ['data' => $json_data]);\n+        // }\n+    }\n+\n+    public function create()\n+    {\n+        // return View('gateway.create');\n+    }\n+\n+    public function store(GatewayRequest $request)\n+    {\n+        $validatedData = $request->validated();\n+\n+        $gataway = $this->gatewayRepository->create($validatedData);\n+        $data = new GatewayResource($gataway);\n+\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        } else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        }\n+    }\n+\n+    public function show(Request $request, $id): JsonResponse\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n+        }\n+        //  else {\n+        //     return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        // }\n+    }\n+\n+    public function edit(Request $request, string $id)\n+    {\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n+        }\n+    }\n+\n+    public function update(GatewayRequest $request, string $id)\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $this->gatewayRepository->update($id, $validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+    public function destroy($id): JsonResponse\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $this->gatewayRepository->delete($id);\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+}\n"
                },
                {
                    "date": 1724241502790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,13 +27,13 @@\n \n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n         }\n-        // else {\n+        else {\n \n-        //     $json_data = GatewayResource::collection($gateways)->toJson();\n-        //     return view('gateway.index', ['data' => $json_data]);\n-        // }\n+            $json_data = GatewayResource::collection($gateways)->toJson();\n+            return view('gateway.index', ['data' => $json_data]);\n+        }\n     }\n \n     public function create()\n     {\n@@ -64,125 +64,13 @@\n         }\n         if ($request->get('is_api')) {\n             return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n         }\n-        //  else {\n-        //     return view('gateway.show', ['gateway' => $gateway->toJson()]);\n-        // }\n-    }\n-\n-    public function edit(Request $request, string $id)\n-    {\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n+         else {\n+            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n         }\n     }\n \n-    public function update(GatewayRequest $request, string $id)\n-    {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $validatedData = $request->validated();\n-        $this->gatewayRepository->update($id, $validatedData);\n-\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-                'message' => 'Gateway updated successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-    public function destroy($id): JsonResponse\n-    {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $this->gatewayRepository->delete($id);\n-        return response()->json(\n-            [\n-                'message' => 'Gateway deleted successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Http\\JsonResponse;\n-use App\\Http\\Controllers\\Controller;\n-use App\\Http\\Requests\\GatewayRequest;\n-use App\\Http\\Resources\\GatewayResource;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Repositories\\GatewayRepositoryInterface;\n-\n-class GatewayController extends Controller\n-{\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository)\n-    {\n-        $this->gatewayRepository = $gatewayRepository;\n-    }\n-\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n-    {\n-        $gateways = $this->gatewayRepository->all();\n-$a = $request->get('is_api')\n-        if ($request->get('is_api')) {\n-            return GatewayResource::collection($gateways);\n-        }\n-        // else {\n-\n-        //     $json_data = GatewayResource::collection($gateways)->toJson();\n-        //     return view('gateway.index', ['data' => $json_data]);\n-        // }\n-    }\n-\n-    public function create()\n-    {\n-        // return View('gateway.create');\n-    }\n-\n-    public function store(GatewayRequest $request)\n-    {\n-        $validatedData = $request->validated();\n-\n-        $gataway = $this->gatewayRepository->create($validatedData);\n-        $data = new GatewayResource($gataway);\n-\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        } else {\n-            return redirect()\n-                ->route('gateway.index')\n-                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        }\n-    }\n-\n-    public function show(Request $request, $id): JsonResponse\n-    {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n-        }\n-        //  else {\n-        //     return view('gateway.show', ['gateway' => $gateway->toJson()]);\n-        // }\n-    }\n-\n     public function edit(Request $request, string $id)\n     {\n         if ($request->get('is_api')) {\n             return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n"
                },
                {
                    "date": 1724241510033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n-\n use Illuminate\\Http\\Request;\n use Illuminate\\Http\\JsonResponse;\n use App\\Http\\Controllers\\Controller;\n use App\\Http\\Requests\\GatewayRequest;\n@@ -20,17 +19,15 @@\n \n     /**\n      * Display a listing of the resource.\n      */\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection | JsonResponse\n+    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         if ($request->get('is_api')) {\n             return GatewayResource::collection($gateways);\n-        }\n-        else {\n-\n+        } else {\n             $json_data = GatewayResource::collection($gateways)->toJson();\n             return view('gateway.index', ['data' => $json_data]);\n         }\n     }\n@@ -63,10 +60,9 @@\n             return response()->json([], Response::HTTP_NOT_FOUND);\n         }\n         if ($request->get('is_api')) {\n             return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n-        }\n-         else {\n+        } else {\n             return view('gateway.show', ['gateway' => $gateway->toJson()]);\n         }\n     }\n \n"
                },
                {
                    "date": 1724242503534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n use App\\Repositories\\GatewayRepositoryInterface;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository)\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository,protected )\n     {\n         $this->gatewayRepository = $gatewayRepository;\n     }\n \n"
                },
                {
                    "date": 1724242511814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n use App\\Repositories\\GatewayRepositoryInterface;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository,protected )\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository,protected ResponseContext $responseContext))\n     {\n         $this->gatewayRepository = $gatewayRepository;\n     }\n \n"
                },
                {
                    "date": 1724242525747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n use App\\Repositories\\GatewayRepositoryInterface;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository,protected ResponseContext $responseContext))\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n         $this->gatewayRepository = $gatewayRepository;\n     }\n \n"
                },
                {
                    "date": 1724242534731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n use App\\Http\\Requests\\GatewayRequest;\n use App\\Http\\Resources\\GatewayResource;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Repositories\\GatewayRepositoryInterface;\n+use App\\Services\\ResponseStrategy\\ResponseContext;\n \n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n"
                },
                {
                    "date": 1724242550888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n-        $this->gatewayRepository = $gatewayRepository;\n+       \n     }\n \n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1724242558343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n-       \n     }\n \n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1724242576180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,10 @@\n         } else {\n             $json_data = GatewayResource::collection($gateways)->toJson();\n             return view('gateway.index', ['data' => $json_data]);\n         }\n+\n+        return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724243633106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,14 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n-        if ($request->get('is_api')) {\n-            return GatewayResource::collection($gateways);\n-        } else {\n-            $json_data = GatewayResource::collection($gateways)->toJson();\n-            return view('gateway.index', ['data' => $json_data]);\n-        }\n+        // if ($request->get('is_api')) {\n+        //     return GatewayResource::collection($gateways);\n+        // } else {\n+        //     $json_data = GatewayResource::collection($gateways)->toJson();\n+        //     return view('gateway.index', ['data' => $json_data]);\n+        // }\n \n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n"
                },
                {
                    "date": 1724245253481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n \n-        return $this->responseContext->executeStrategy($gateways);\n+        return $this->responseContext->executeStrategy($request, $gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724245852812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n \n-        return $this->responseContext->executeStrategy($request, $gateways);\n+        return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724249008582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,14 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n-        // if ($request->get('is_api')) {\n-        //     return GatewayResource::collection($gateways);\n-        // } else {\n-        //     $json_data = GatewayResource::collection($gateways)->toJson();\n-        //     return view('gateway.index', ['data' => $json_data]);\n-        // }\n+        if ($request->get('is_api')) {\n+            return GatewayResource::collection($gateways);\n+        } else {\n+            $json_data = GatewayResource::collection($gateways)->toJson();\n+            return view('gateway.index', ['data' => $json_data]);\n+        }\n \n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n"
                },
                {
                    "date": 1724249213450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,14 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n-        if ($request->get('is_api')) {\n-            return GatewayResource::collection($gateways);\n-        } else {\n-            $json_data = GatewayResource::collection($gateways)->toJson();\n-            return view('gateway.index', ['data' => $json_data]);\n-        }\n+        // if ($request->get('is_api')) {\n+        //     return GatewayResource::collection($gateways);\n+        // } else {\n+        //     $json_data = GatewayResource::collection($gateways)->toJson();\n+        //     return view('gateway.index', ['data' => $json_data]);\n+        // }\n \n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n"
                },
                {
                    "date": 1724252048029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-\n+        $responseContext = app(ResponseContext::class);\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724253295438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-        $responseContext = app(ResponseContext::class);\n+$responseContext = app(ResponseContext::class);\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724253301743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n use App\\Services\\ResponseStrategy\\ResponseContext;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, )\n     {\n     }\n \n     /**\n@@ -29,10 +29,10 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-$responseContext = app(ResponseContext::class);\n-        return $this->responseContext->executeStrategy($gateways);\n+        $responseContext = app(ResponseContext::class);\n+        return $responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724253313421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n use App\\Services\\ResponseStrategy\\ResponseContext;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, )\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n     }\n \n     /**\n@@ -29,10 +29,10 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-        $responseContext = app(ResponseContext::class);\n-        return $responseContext->executeStrategy($gateways);\n+\n+        return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724254269889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-\n+dd\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724254275144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-dd\n+dd($instance = ResponseStrategyService::getInstance());\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724254289494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-dd($instance = ResponseStrategyService::getInstance());\n+dd(  App\\Providers\\ResponseStrategyService::getInstance());\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724254305966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-dd(  App\\Providers\\ResponseStrategyService::getInstance());\n+dd(  ..\\App\\Providers\\ResponseStrategyService::getInstance());\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724254312342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-dd(  ..\\App\\Providers\\ResponseStrategyService::getInstance());\n+dd( ResponseStrategyService::getInstance());\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724254333133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         // } else {\n         //     $json_data = GatewayResource::collection($gateways)->toJson();\n         //     return view('gateway.index', ['data' => $json_data]);\n         // }\n-dd( ResponseStrategyService::getInstance());\n+\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724255146264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,8 @@\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n-        // if ($request->get('is_api')) {\n-        //     return GatewayResource::collection($gateways);\n-        // } else {\n-        //     $json_data = GatewayResource::collection($gateways)->toJson();\n-        //     return view('gateway.index', ['data' => $json_data]);\n-        // }\n \n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n"
                },
                {
                    "date": 1724255156429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,13 @@\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n     }\n \n-    /**\n-     * Display a listing of the resource.\n-     */\n+\n     public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n-\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724256083192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,9 @@\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n     }\n \n-\n-    public function index(Request $request): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         return $this->responseContext->executeStrategy($gateways);\n"
                },
                {
                    "date": 1724256089732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n     }\n \n-    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n+    public function index():\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         return $this->responseContext->executeStrategy($gateways);\n"
                },
                {
                    "date": 1724256095564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n     {\n     }\n \n-    public function index():\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n         return $this->responseContext->executeStrategy($gateways);\n"
                },
                {
                    "date": 1724256300551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n use App\\Http\\Resources\\GatewayResource;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Repositories\\GatewayRepositoryInterface;\n use App\\Services\\ResponseStrategy\\ResponseContext;\n+use PhpParser\\Node\\Expr\\Cast\\Object_;\n \n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n@@ -19,10 +20,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-\n-        return $this->responseContext->executeStrategy($gateways);\n+        return $this->responseContext->executeStrategy(Object_$gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724256306553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n use App\\Http\\Resources\\GatewayResource;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Repositories\\GatewayRepositoryInterface;\n use App\\Services\\ResponseStrategy\\ResponseContext;\n-use PhpParser\\Node\\Expr\\Cast\\Object_;\n \n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n@@ -20,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy(Object_$gateways);\n+        return $this->responseContext->executeStrategy(Std $gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724256313916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy(Std $gateways);\n+        return $this->responseContext->executeStrategy(Ob $gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724271034323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,16 +12,16 @@\n use App\\Services\\ResponseStrategy\\ResponseContext;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContext $responseContext)\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n     {\n     }\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy(Ob $gateways);\n+        return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724324274188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n use App\\Http\\Requests\\GatewayRequest;\n use App\\Http\\Resources\\GatewayResource;\n use Symfony\\Component\\HttpFoundation\\Response;\n use App\\Repositories\\GatewayRepositoryInterface;\n-use App\\Services\\ResponseStrategy\\ResponseContext;\n+use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n \n class GatewayController extends Controller\n {\n     public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n@@ -34,8 +34,9 @@\n \n         $gataway = $this->gatewayRepository->create($validatedData);\n         $data = new GatewayResource($gataway);\n \n+        return $this->responseContext->executeStrategy($gateways);\n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         } else {\n             return redirect()\n"
                },
                {
                    "date": 1724324328793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,100 +1,65 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use App\\Models\\Gateway;\n use Illuminate\\Http\\Request;\n-use Illuminate\\Http\\JsonResponse;\n-use App\\Http\\Controllers\\Controller;\n-use App\\Http\\Requests\\GatewayRequest;\n-use App\\Http\\Resources\\GatewayResource;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Repositories\\GatewayRepositoryInterface;\n-use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n     {\n+         return view('gateway.index');\n     }\n \n-    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n-    {\n-        $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy($gateways);\n-    }\n-\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n     public function create()\n     {\n-        // return View('gateway.create');\n+        //\n     }\n \n-    public function store(GatewayRequest $request)\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n     {\n-        $validatedData = $request->validated();\n-\n-        $gataway = $this->gatewayRepository->create($validatedData);\n-        $data = new GatewayResource($gataway);\n-\n-        return $this->responseContext->executeStrategy($gateways);\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        } else {\n-            return redirect()\n-                ->route('gateway.index')\n-                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        }\n+        //\n     }\n \n-    public function show(Request $request, $id): JsonResponse\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Gateway $gateway)\n     {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n-        } else {\n-            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n-        }\n+        //\n     }\n \n-    public function edit(Request $request, string $id)\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Gateway $gateway)\n     {\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n-        }\n+        //\n     }\n \n-    public function update(GatewayRequest $request, string $id)\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Gateway $gateway)\n     {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $validatedData = $request->validated();\n-        $this->gatewayRepository->update($id, $validatedData);\n-\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-                'message' => 'Gateway updated successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n+        //\n     }\n \n-    public function destroy($id): JsonResponse\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Gateway $gateway)\n     {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $this->gatewayRepository->delete($id);\n-        return response()->json(\n-            [\n-                'message' => 'Gateway deleted successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n+        //\n     }\n }\n"
                },
                {
                    "date": 1724324335255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,99 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n-use App\\Models\\Gateway;\n use Illuminate\\Http\\Request;\n+use Illuminate\\Http\\JsonResponse;\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Requests\\GatewayRequest;\n+use App\\Http\\Resources\\GatewayResource;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Repositories\\GatewayRepositoryInterface;\n+use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n \n class GatewayController extends Controller\n {\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n     {\n-         return view('gateway.index');\n     }\n \n-    /**\n-     * Show the form for creating a new resource.\n-     */\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n+    {\n+        $gateways = $this->gatewayRepository->all();\n+        return $this->responseContext->executeStrategy($gateways);\n+    }\n+\n     public function create()\n     {\n-        //\n+        // return View('gateway.create');\n     }\n \n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n+    public function store(GatewayRequest $request)\n     {\n-        //\n+        $validatedData = $request->validated();\n+\n+        $gataway = $this->gatewayRepository->create($validatedData);\n+        $data = new GatewayResource($gataway);\n+\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        } else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        }\n     }\n \n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Gateway $gateway)\n+    public function show(Request $request, $id): JsonResponse\n     {\n-        //\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n+        } else {\n+            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        }\n     }\n \n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Gateway $gateway)\n+    public function edit(Request $request, string $id)\n     {\n-        //\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n+        }\n     }\n \n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Gateway $gateway)\n+    public function update(GatewayRequest $request, string $id)\n     {\n-        //\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $this->gatewayRepository->update($id, $validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n \n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Gateway $gateway)\n+    public function destroy($id): JsonResponse\n     {\n-        //\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $this->gatewayRepository->delete($id);\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n }\n"
                },
                {
                    "date": 1724324345020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n \n         $gataway = $this->gatewayRepository->create($validatedData);\n         $data = new GatewayResource($gataway);\n \n+        return $this->responseContext->executeStrategy($gateways);\n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         } else {\n             return redirect()\n"
                },
                {
                    "date": 1724327102037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,10 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n+\n+        App\\Http\\Resources\\GatewayResource::collection($data);\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n@@ -34,9 +36,8 @@\n \n         $gataway = $this->gatewayRepository->create($validatedData);\n         $data = new GatewayResource($gataway);\n \n-        return $this->responseContext->executeStrategy($gateways);\n         if ($request->get('is_api')) {\n             return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n         } else {\n             return redirect()\n"
                },
                {
                    "date": 1724327107979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n \n-        App\\Http\\Resources\\GatewayResource::collection($data);\n+        GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724327162657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Http\\JsonResponse;\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Requests\\GatewayRequest;\n+use App\\Http\\Resources\\GatewayResource;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Repositories\\GatewayRepositoryInterface;\n+use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n+\n+class GatewayController extends Controller\n+{\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n+    {\n+    }\n+\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n+    {\n+        $gateways = $this->gatewayRepository->all();\n+        \n+        return $this->responseContext->executeStrategy($gateways);\n+    }\n+\n+    public function create()\n+    {\n+        // return View('gateway.create');\n+    }\n+\n+    public function store(GatewayRequest $request)\n+    {\n+        $validatedData = $request->validated();\n+\n+        $gataway = $this->gatewayRepository->create($validatedData);\n+        $data = new GatewayResource($gataway);\n+\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        } else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        }\n+    }\n+\n+    public function show(Request $request, $id): JsonResponse\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n+        } else {\n+            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        }\n+    }\n+\n+    public function edit(Request $request, string $id)\n+    {\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n+        }\n+    }\n+\n+    public function update(GatewayRequest $request, string $id)\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $this->gatewayRepository->update($id, $validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+    public function destroy($id): JsonResponse\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $this->gatewayRepository->delete($id);\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+}\n"
                },
                {
                    "date": 1724327170746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        \n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n@@ -97,105 +96,4 @@\n             Response::HTTP_OK,\n         );\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Http\\JsonResponse;\n-use App\\Http\\Controllers\\Controller;\n-use App\\Http\\Requests\\GatewayRequest;\n-use App\\Http\\Resources\\GatewayResource;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Repositories\\GatewayRepositoryInterface;\n-use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n-\n-class GatewayController extends Controller\n-{\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n-    {\n-    }\n-\n-    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n-    {\n-        $gateways = $this->gatewayRepository->all();\n-\n-        GatewayResource::collection($gateways);\n-        return $this->responseContext->executeStrategy($gateways);\n-    }\n-\n-    public function create()\n-    {\n-        // return View('gateway.create');\n-    }\n-\n-    public function store(GatewayRequest $request)\n-    {\n-        $validatedData = $request->validated();\n-\n-        $gataway = $this->gatewayRepository->create($validatedData);\n-        $data = new GatewayResource($gataway);\n-\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        } else {\n-            return redirect()\n-                ->route('gateway.index')\n-                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        }\n-    }\n-\n-    public function show(Request $request, $id): JsonResponse\n-    {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n-        } else {\n-            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n-        }\n-    }\n-\n-    public function edit(Request $request, string $id)\n-    {\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n-        }\n-    }\n-\n-    public function update(GatewayRequest $request, string $id)\n-    {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $validatedData = $request->validated();\n-        $this->gatewayRepository->update($id, $validatedData);\n-\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-                'message' => 'Gateway updated successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-\n-    public function destroy($id): JsonResponse\n-    {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $this->gatewayRepository->delete($id);\n-        return response()->json(\n-            [\n-                'message' => 'Gateway deleted successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n-    }\n-}\n"
                },
                {
                    "date": 1724327610336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy($gateways);\n+        return $this->responseContext->executeStrategy($gateways,);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724327997850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,99 +1,65 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use App\\Models\\Gateway;\n use Illuminate\\Http\\Request;\n-use Illuminate\\Http\\JsonResponse;\n-use App\\Http\\Controllers\\Controller;\n-use App\\Http\\Requests\\GatewayRequest;\n-use App\\Http\\Resources\\GatewayResource;\n-use Symfony\\Component\\HttpFoundation\\Response;\n-use App\\Repositories\\GatewayRepositoryInterface;\n-use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n \n class GatewayController extends Controller\n {\n-    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n     {\n+         return view('gateway.index');\n     }\n \n-    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n-    {\n-        $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy($gateways,);\n-    }\n-\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n     public function create()\n     {\n-        // return View('gateway.create');\n+        //\n     }\n \n-    public function store(GatewayRequest $request)\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n     {\n-        $validatedData = $request->validated();\n-\n-        $gataway = $this->gatewayRepository->create($validatedData);\n-        $data = new GatewayResource($gataway);\n-\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        } else {\n-            return redirect()\n-                ->route('gateway.index')\n-                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n-        }\n+        //\n     }\n \n-    public function show(Request $request, $id): JsonResponse\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Gateway $gateway)\n     {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n-        } else {\n-            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n-        }\n+        //\n     }\n \n-    public function edit(Request $request, string $id)\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Gateway $gateway)\n     {\n-        if ($request->get('is_api')) {\n-            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n-        }\n+        //\n     }\n \n-    public function update(GatewayRequest $request, string $id)\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Gateway $gateway)\n     {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $validatedData = $request->validated();\n-        $this->gatewayRepository->update($id, $validatedData);\n-\n-        return response()->json(\n-            [\n-                'data' => new GatewayResource($gateway),\n-                'message' => 'Gateway updated successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n+        //\n     }\n \n-    public function destroy($id): JsonResponse\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Gateway $gateway)\n     {\n-        $gateway = $this->gatewayRepository->find($id);\n-        if (!$gateway) {\n-            return response()->json([], Response::HTTP_NOT_FOUND);\n-        }\n-        $this->gatewayRepository->delete($id);\n-        return response()->json(\n-            [\n-                'message' => 'Gateway deleted successfully',\n-            ],\n-            Response::HTTP_OK,\n-        );\n+        //\n     }\n }\n"
                },
                {
                    "date": 1724328003844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,99 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n-use App\\Models\\Gateway;\n use Illuminate\\Http\\Request;\n+use Illuminate\\Http\\JsonResponse;\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Requests\\GatewayRequest;\n+use App\\Http\\Resources\\GatewayResource;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Repositories\\GatewayRepositoryInterface;\n+use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n \n class GatewayController extends Controller\n {\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n     {\n-         return view('gateway.index');\n     }\n \n-    /**\n-     * Show the form for creating a new resource.\n-     */\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n+    {\n+        $gateways = $this->gatewayRepository->all();\n+        return $this->responseContext->executeStrategy($gateways,);\n+    }\n+\n     public function create()\n     {\n-        //\n+        // return View('gateway.create');\n     }\n \n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n+    public function store(GatewayRequest $request)\n     {\n-        //\n+        $validatedData = $request->validated();\n+\n+        $gataway = $this->gatewayRepository->create($validatedData);\n+        $data = new GatewayResource($gataway);\n+\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        } else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        }\n     }\n \n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Gateway $gateway)\n+    public function show(Request $request, $id): JsonResponse\n     {\n-        //\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n+        } else {\n+            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        }\n     }\n \n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Gateway $gateway)\n+    public function edit(Request $request, string $id)\n     {\n-        //\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n+        }\n     }\n \n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Gateway $gateway)\n+    public function update(GatewayRequest $request, string $id)\n     {\n-        //\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $this->gatewayRepository->update($id, $validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n \n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Gateway $gateway)\n+    public function destroy($id): JsonResponse\n     {\n-        //\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $this->gatewayRepository->delete($id);\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n     }\n }\n"
                },
                {
                    "date": 1724328017165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy($gateways,);\n+        GatewayResource\n+        return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724328025611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        GatewayResource\n+       $ GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724328206442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-       $ GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724328645928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n+       $t =  GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724328703369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-       $t =  GatewayResource::collection($gateways);\n+    //    $t =  GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724329019233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-    //    $t =  GatewayResource::collection($gateways);\n+       $t =  GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724329195127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-       $t =  GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724331378366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n+       $t =  GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways,'test');\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724333034350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-       $t =  GatewayResource::collection($gateways);\n-        return $this->responseContext->executeStrategy($gateways,'test');\n+    //    $t =  GatewayResource::collection($gateways);\n+        return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724333046656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-    //    $t =  GatewayResource::collection($gateways);\n         return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n"
                },
                {
                    "date": 1724333083720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \n     public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n     {\n         $gateways = $this->gatewayRepository->all();\n-        return $this->responseContext->executeStrategy($ganullteways);\n+        return $this->responseContext->executeStrategy($gateways);\n     }\n \n     public function create()\n     {\n"
                },
                {
                    "date": 1724333104830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Http\\JsonResponse;\n+use App\\Http\\Controllers\\Controller;\n+use App\\Http\\Requests\\GatewayRequest;\n+use App\\Http\\Resources\\GatewayResource;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use App\\Repositories\\GatewayRepositoryInterface;\n+use App\\Services\\ResponseStrategy\\ResponseContextInterface;\n+\n+class GatewayController extends Controller\n+{\n+    public function __construct(protected GatewayRepositoryInterface $gatewayRepository, protected ResponseContextInterface $responseContext)\n+    {\n+    }\n+\n+    public function index(): \\Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection|JsonResponse\n+    {\n+        $gateways = $this->gatewayRepository->all();\n+        return $this->responseContext->executeStrategy([]);\n+    }\n+\n+    public function create()\n+    {\n+        // return View('gateway.create');\n+    }\n+\n+    public function store(GatewayRequest $request)\n+    {\n+        $validatedData = $request->validated();\n+\n+        $gataway = $this->gatewayRepository->create($validatedData);\n+        $data = new GatewayResource($gataway);\n+\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => $data, 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        } else {\n+            return redirect()\n+                ->route('gateway.index')\n+                ->with(['data' => $data->toJson(), 'message' => 'Gateway created successfully'], Response::HTTP_CREATED);\n+        }\n+    }\n+\n+    public function show(Request $request, $id): JsonResponse\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => new GatewayResource($gateway)], Response::HTTP_OK);\n+        } else {\n+            return view('gateway.show', ['gateway' => $gateway->toJson()]);\n+        }\n+    }\n+\n+    public function edit(Request $request, string $id)\n+    {\n+        if ($request->get('is_api')) {\n+            return response()->json(['data' => ['id' => $id]], Response::HTTP_BAD_REQUEST);\n+        }\n+    }\n+\n+    public function update(GatewayRequest $request, string $id)\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $validatedData = $request->validated();\n+        $this->gatewayRepository->update($id, $validatedData);\n+\n+        return response()->json(\n+            [\n+                'data' => new GatewayResource($gateway),\n+                'message' => 'Gateway updated successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+\n+    public function destroy($id): JsonResponse\n+    {\n+        $gateway = $this->gatewayRepository->find($id);\n+        if (!$gateway) {\n+            return response()->json([], Response::HTTP_NOT_FOUND);\n+        }\n+        $this->gatewayRepository->delete($id);\n+        return response()->json(\n+            [\n+                'message' => 'Gateway deleted successfully',\n+            ],\n+            Response::HTTP_OK,\n+        );\n+    }\n+}\n"
                }
            ],
            "date": 1722340649204,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Gateway;\nuse Illuminate\\Http\\Request;\n\nclass GatewayController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n         \n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(Request $request)\n    {\n        //\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Gateway $gateway)\n    {\n        //\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Gateway $gateway)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(Request $request, Gateway $gateway)\n    {\n        //\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Gateway $gateway)\n    {\n        //\n    }\n}\n"
        }
    ]
}